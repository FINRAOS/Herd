<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2015 herd contributors

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.finra.herd</groupId>
      <artifactId>herd-code</artifactId>
      <version>0.49.0-SNAPSHOT</version>
   </parent>

   <!--
    This is a Maven project that functions like herd-model-api, but it compiles the auto-generated sources into JDK 1.5 bytecode for clients that
    are not yet at the same JDK version as the herd project.
    -->
   <name>herd model api 1.5</name>

   <!-- groupId and version are inherited from the parent and can be overridden here if needed. -->
   <artifactId>herd-model-api-15</artifactId>

   <description>This project contains the model API classes compiled for JDK 1.5 and above. This project depends on herd-model-api and should not contain any
      actual files.
   </description>
   <url>http://finraos.github.io/herd/</url>

   <dependencies>

      <dependency>
         <groupId>org.jvnet.jaxb2_commons</groupId>
         <artifactId>jaxb2-basics-runtime</artifactId>
      </dependency>
      <dependency>
         <groupId>org.eclipse.persistence</groupId>
         <artifactId>org.eclipse.persistence.moxy</artifactId>
      </dependency>

   </dependencies>

   <build>

      <plugins>

         <!--
          This plugin will take the herd-model-api resources and extract them into the target directory so they will be available to
          the maven-jaxb2-plugin which generates sources based on these resources (e.g. XSD, etc.).
          -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
               <execution>
                  <!--
                   Use the initialize phase to ensure this plugin runs before the maven-jaxb2-plugin below.
                   This will ensure the XSD, XJB, etc. files are extracted into our target directory here before we start generating sources.
                   -->
                  <phase>initialize</phase>
                  <goals>
                     <goal>unpack</goal>
                  </goals>
                  <configuration>
                     <artifactItems>
                        <artifactItem>
                           <groupId>${project.groupId}</groupId>
                           <artifactId>herd-model-api</artifactId>
                           <outputDirectory>${project.build.directory}/herd-model-api-resources</outputDirectory>
                        </artifactItem>
                     </artifactItems>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <!-- Use the maven-jaxb2-plugin to auto-generate our Java model classes from the XSD and XJB resources. -->
         <plugin>
            <!--
            This Maven 2 plugin wraps the JAXB 2.x XJC compiler and provides the capability to generate Java sources from XML Schemas.
            General instructions on how to use the Maven JAXB2 plugin can be found here:
            http://confluence.highsource.org/display/MJIIP/Maven+JAXB2+Plugin
            -->
            <groupId>org.jvnet.jaxb2.maven2</groupId>
            <artifactId>maven-jaxb2-plugin</artifactId>
            <executions>
               <execution>
                  <id>herd-jaxb-generate</id>
                  <phase>generate-sources</phase>
                  <goals>
                     <goal>generate</goal>
                  </goals>
                  <configuration>
                     <schemaDirectory>${project.build.directory}/herd-model-api-resources</schemaDirectory>
                     <generatePackage>org.finra.herd.model.api.xml</generatePackage>
                     <generateDirectory>${project.build.directory}/generated-sources/jaxb/herd</generateDirectory>
                  </configuration>
               </execution>
            </executions>
            <configuration>
               <extension>true</extension>
               <args>
                  <arg>-no-header</arg>
                  <arg>-Xxew</arg>
                  <arg>-Xxew:instantiate none</arg>
                  <arg>-Xvalue-constructor</arg>
                  <arg>-XtoString</arg>
                  <arg>-Xequals</arg>
                  <arg>-XhashCode</arg>
                  <arg>-Xcopyable</arg>
                  <arg>-Xannotate</arg>
               </args>
               <plugins>
                  <plugin>
                     <!--
                     This JAXB plugin utilises the power of  @XmlElementWrapper  annotation.
                     Originally  xjc  trends to create wrapper classes which are the containers for collections.
                     This plugin goes through all properties to find ones which can be represented in the model in more optimal way.
                     General instructions on how to use the JAXB plugin can be found here: https://github.com/dmak/jaxb-xew-plugin
                     -->
                     <groupId>com.github.jaxb-xew-plugin</groupId>
                     <artifactId>jaxb-xew-plugin</artifactId>
                     <!-- TODO: Please investigate if we can remove the below plugin version. -->
                     <version>${jaxb.xew.plugin.version}</version>
                  </plugin>
                  <plugin>
                     <groupId>org.jvnet.jaxb2_commons</groupId>
                     <artifactId>jaxb2-basics-annotate</artifactId>
                     <!-- TODO: Please investigate if we can remove the below plugin version. -->
                     <version>${jaxb2.basics.annotate.version}</version>
                  </plugin>
                  <plugin>
                     <!-- JAXB2 Basics Basic Plugins -->
                     <groupId>org.jvnet.jaxb2_commons</groupId>
                     <artifactId>jaxb2-basics</artifactId>
                     <!-- TODO: Please investigate if we can remove the below plugin version. -->
                     <version>${jaxb2.basics.version}</version>
                  </plugin>
                  <plugin>
                     <!-- JAXB2 Basics Tools -->
                     <groupId>org.jvnet.jaxb2_commons</groupId>
                     <artifactId>jaxb2-basics-tools</artifactId>
                     <!-- TODO: Please investigate if we can remove the below plugin version. -->
                     <version>${jaxb2.basics.tools.version}</version>
                  </plugin>
                  <plugin>
                     <!-- JAXB2 Value Constructor -->
                     <groupId>org.jvnet.jaxb2_commons</groupId>
                     <artifactId>jaxb2-value-constructor</artifactId>
                     <!-- TODO: Please investigate if we can remove the below plugin version. -->
                     <version>${jaxb2.value.constructor.version}</version>
                  </plugin>
               </plugins>
            </configuration>
            <dependencies>
               <dependency>
                  <groupId>org.eclipse.persistence</groupId>
                  <artifactId>org.eclipse.persistence.moxy</artifactId>
                  <!-- TODO: Please investigate if we can remove the below version. -->
                  <version>${eclipse.persistence.version}</version>
               </dependency>
            </dependencies>
         </plugin>

         <!-- Copy over the JAXB resources into the classes directory so they will get included in the JAR. -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
               <!-- Copy over the herd.xsd and herd.xjb resources. -->
               <execution>
                  <id>copy-root-herd-resources</id>
                  <phase>process-resources</phase>
                  <goals>
                     <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                     <outputDirectory>${project.build.directory}/classes</outputDirectory>
                     <resources>
                        <resource>
                           <directory>${project.build.directory}/herd-model-api-resources/</directory>
                           <includes>
                              <include>herd.*</include>
                           </includes>
                        </resource>
                     </resources>
                  </configuration>
               </execution>
               <!-- Copy over the jaxb.properties resource. -->
               <execution>
                  <id>copy-jaxb-properties-resource</id>
                  <phase>process-resources</phase>
                  <goals>
                     <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                     <outputDirectory>${project.build.directory}/classes/org/finra/herd/model/api/xml</outputDirectory>
                     <resources>
                        <resource>
                           <directory>${project.build.directory}/herd-model-api-resources/org/finra/herd/model/api/xml</directory>
                           <includes>
                              <include>jaxb.properties</include>
                           </includes>
                        </resource>
                     </resources>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <!-- Configure the Maven compiler to use JDK 1.5 to produce the appropriate class files. -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
               <source>1.5</source>
               <target>1.5</target>
            </configuration>
         </plugin>
      </plugins>

   </build>

</project>
