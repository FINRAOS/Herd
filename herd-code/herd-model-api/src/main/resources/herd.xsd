<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
  Copyright 2015 herd contributors

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" version="1.0">

   <!-- ***** Build Information ***** -->

   <xs:element name="buildInformation" type="buildInformation"/>
   <xs:complexType name="buildInformation">
      <xs:annotation>
         <xs:documentation>The information about the current build of the application</xs:documentation>
      </xs:annotation>
      <xs:all>
         <xs:element name="buildOs" type="xs:string">
            <xs:annotation>
               <xs:documentation>The OS in which the current build was built</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="buildUser" type="xs:string">
            <xs:annotation>
               <xs:documentation>The user ID of the user that performed the build</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="buildDate" type="xs:string">
            <xs:annotation>
               <xs:documentation>The date/time when the build was performed</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="buildNumber" type="xs:string">
            <xs:annotation>
               <xs:documentation>The version number (from Maven POM) of the current build</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** Error Information ***** -->

   <xs:element name="errorInformation" type="errorInformation"/>
   <xs:complexType name="errorInformation">
      <xs:all>
         <xs:element name="statusCode" type="xs:int"/>
         <xs:element name="statusDescription" type="xs:string"/>
         <xs:element name="message" type="xs:string"/>
         <xs:element name="messageDetails" type="messageDetails" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="messageDetails">
      <xs:sequence>
         <xs:element name="message" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <!-- ***** Storage Platform ***** -->

   <xs:element name="storagePlatforms" type="storagePlatforms"/>
   <xs:complexType name="storagePlatforms">
      <xs:sequence>
         <xs:element name="storagePlatform" type="storagePlatform" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="storagePlatform" type="storagePlatform"/>
   <xs:complexType name="storagePlatform">
      <xs:all>
         <xs:element name="name" type="xs:string">
            <xs:annotation>
               <xs:documentation>Name of Storage Platform</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** Storage ***** -->

   <xs:element name="storageCreateRequest" type="storageCreateRequest"/>
   <xs:complexType name="storageCreateRequest">
      <xs:all>
         <xs:element name="name" type="xs:string">
            <xs:annotation>
               <xs:documentation>Name of Storage</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storagePlatformName" type="xs:string">
            <xs:annotation>
               <xs:documentation>Name of Storage Platform (eg S3) associated with this Storage</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="attributes" type="attributes" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Collection of name-value pairs. This can be used to store things such as S3 bucket names, validation flags, and custom
                  user-defined meta-data about this storage
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="storageKeys" type="storageKeys"/>
   <xs:complexType name="storageKeys">
      <xs:sequence>
         <xs:element name="storageKey" type="storageKey" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Storage</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="storageKey">
      <xs:all>
         <xs:element name="storageName" type="xs:string">
            <xs:annotation>
               <xs:documentation>Name of Storage</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="storageUpdateRequest" type="storageUpdateRequest"/>
   <xs:complexType name="storageUpdateRequest">
      <xs:all>
         <xs:element name="noData" type="xs:string" minOccurs="0" maxOccurs="0">
            <xs:annotation>
               <xs:documentation>There is nothing that is currently updated, but we will have something in the future</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="storage" type="storage"/>
   <xs:complexType name="storage">
      <xs:all>
         <xs:element name="name" type="xs:string">
            <xs:annotation>
               <xs:documentation>Name of Storage</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storagePlatformName" type="xs:string">
            <xs:annotation>
               <xs:documentation>Name of Storage Platform (eg S3) associated with this Storage</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="attributes" type="attributes" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Collection of name-value pairs. This can be used to store things such as S3 bucket names, validation flags, and custom
                  user-defined meta-data about this storage
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** Storage Daily Upload Stats ***** -->

   <xs:element name="storageDailyUploadStats" type="storageDailyUploadStats"/>
   <xs:complexType name="storageDailyUploadStats">
      <xs:sequence>
         <xs:element name="storageDailyUploadStat" type="storageDailyUploadStat" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="storageDailyUploadStat">
      <xs:sequence>
         <xs:element name="uploadDate" type="xs:date">
            <xs:annotation>
               <xs:documentation>The upload date in YYYY-MM-DD format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="totalFiles" type="xs:long">
            <xs:annotation>
               <xs:documentation>The total number of files uploaded to the storage on the date specified</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="totalBytes" type="xs:long">
            <xs:annotation>
               <xs:documentation>The total number of bytes uploaded to the storage on the date specified</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="storageBusinessObjectDefinitionDailyUploadStats" type="storageBusinessObjectDefinitionDailyUploadStats"/>
   <xs:complexType name="storageBusinessObjectDefinitionDailyUploadStats">
      <xs:sequence>
         <xs:element name="storageBusinessObjectDefinitionDailyUploadStat" type="storageBusinessObjectDefinitionDailyUploadStat" minOccurs="0"
                     maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="storageBusinessObjectDefinitionDailyUploadStat">
      <xs:sequence>
         <xs:element name="uploadDate" type="xs:date">
            <xs:annotation>
               <xs:documentation>The upload date in YYYY-MM-DD format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Namespace that Business Object Definition is associated with</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="dataProviderName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the Data Provider that Business Object Definition is associated with</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the Business Object Definition</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="totalFiles" type="xs:long">
            <xs:annotation>
               <xs:documentation>The total number of files uploaded to the storage on the date specified</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="totalBytes" type="xs:long">
            <xs:annotation>
               <xs:documentation>The total number of bytes uploaded to the storage on the date specified</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <!-- ***** Namespace ***** -->

   <xs:element name="namespaceCreateRequest" type="namespaceCreateRequest"/>
   <xs:complexType name="namespaceCreateRequest">
      <xs:all>
         <xs:element name="namespaceCode" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Namespace code</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="namespace" type="namespace"/>
   <xs:complexType name="namespace">
      <xs:all>
         <xs:element name="namespaceCode" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Namespace code</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="namespaceKeys" type="namespaceKeys"/>
   <xs:complexType name="namespaceKeys">
      <xs:sequence>
         <xs:element name="namespaceKey" type="namespaceKey" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Value that uniquely identifies a Namespace</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="namespaceKey">
      <xs:all>
         <xs:element name="namespaceCode" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Namespace code</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** User Authorizations ***** -->

   <xs:element name="userAuthorizations" type="userAuthorizations"/>
   <xs:complexType name="userAuthorizations">
      <xs:all>
         <xs:element name="userId" type="xs:string">
            <xs:annotation>
               <xs:documentation>The user id</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="namespaceAuthorizations" type="namespaceAuthorizations">
            <xs:annotation>
               <xs:documentation>The list of namespace authorizations</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="namespaceAuthorizations">
      <xs:sequence>
         <xs:element name="namespaceAuthorization" type="namespaceAuthorization" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>The namespace authorization</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="namespaceAuthorization">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The namespace</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="namespacePermissions" type="namespacePermissions">
            <xs:annotation>
               <xs:documentation>The list of namespace permissions</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="namespacePermissions" type="namespacePermissions"/>
   <xs:complexType name="namespacePermissions">
      <xs:sequence>
         <xs:element name="namespacePermission" type="namespacePermissionEnum" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>The namespace permission. Supported values are: READ, WRITE, EXECUTE, GRANT</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>


   <xs:simpleType name="namespacePermissionEnum">
      <xs:restriction base="xs:string">
         <xs:enumeration value="READ"/>
         <xs:enumeration value="WRITE"/>
         <xs:enumeration value="EXECUTE"/>
         <xs:enumeration value="GRANT"/>
      </xs:restriction>
   </xs:simpleType>


   <!-- ***** User Namespace Authorization ***** -->

   <xs:element name="userNamespaceAuthorizationCreateRequest" type="userNamespaceAuthorizationCreateRequest"/>
   <xs:complexType name="userNamespaceAuthorizationCreateRequest">
      <xs:all>
         <xs:element name="userNamespaceAuthorizationKey" type="userNamespaceAuthorizationKey">
            <xs:annotation>
               <xs:documentation>The user namespace authorization key</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="namespacePermissions" type="namespacePermissions">
            <xs:annotation>
               <xs:documentation>The list of namespace permissions</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="userNamespaceAuthorizationUpdateRequest" type="userNamespaceAuthorizationUpdateRequest"/>
   <xs:complexType name="userNamespaceAuthorizationUpdateRequest">
      <xs:all>
         <xs:element name="namespacePermissions" type="namespacePermissions">
            <xs:annotation>
               <xs:documentation>The list of namespace permissions</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="userNamespaceAuthorizations" type="userNamespaceAuthorizations"/>
   <xs:complexType name="userNamespaceAuthorizations">
      <xs:sequence>
         <xs:element name="userNamespaceAuthorization" type="userNamespaceAuthorization" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>The user namespace authorization</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="userNamespaceAuthorization" type="userNamespaceAuthorization"/>
   <xs:complexType name="userNamespaceAuthorization">
      <xs:all>
         <xs:element name="id" type="xs:int">
            <xs:annotation>
               <xs:documentation>A system unique ID of this user namespace authorization</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="userNamespaceAuthorizationKey" type="userNamespaceAuthorizationKey">
            <xs:annotation>
               <xs:documentation>The user namespace authorization key</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="namespacePermissions" type="namespacePermissions">
            <xs:annotation>
               <xs:documentation>The list of namespace permissions</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="userNamespaceAuthorizationKey">
      <xs:all>
         <xs:element name="userId" type="xs:string">
            <xs:annotation>
               <xs:documentation>The user id</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The namespace</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** Data Provider ***** -->

   <xs:element name="dataProviderCreateRequest" type="dataProviderCreateRequest"/>
   <xs:complexType name="dataProviderCreateRequest">
      <xs:all>
         <xs:element name="dataProviderName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The data provider name</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="dataProvider" type="dataProvider"/>
   <xs:complexType name="dataProvider">
      <xs:all>
         <xs:element name="dataProviderName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The data provider name</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="dataProviderKeys" type="dataProviderKeys">
      <xs:annotation>
         <xs:documentation>The list of data provider keys</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="dataProviderKeys">
      <xs:sequence>
         <xs:element name="dataProviderKey" type="dataProviderKey" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Value that uniquely identifies a Data Provider</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="dataProviderKey">
      <xs:all>
         <xs:element name="dataProviderName" type="xs:string"/>
      </xs:all>
   </xs:complexType>

   <!-- ***** Tag Type ***** -->

   <xs:element name="tagTypeCreateRequest" type="tagTypeCreateRequest"/>
   <xs:complexType name="tagTypeCreateRequest">
      <xs:all>
         <xs:element name="tagTypeKey" type="tagTypeKey">
            <xs:annotation>
               <xs:documentation>The tag type unique key</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="displayName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The tag type's name in plain text for human readability</xs:documentation>
            </xs:annotation>
         </xs:element>
         <!--
           This is required, but is left as optional here so the auto-generated object becomes "Integer" and not "int".
           That way, JSON objects that deserialize into the auto-generated object don't use the default int value of "0" and instead will leave
           the field as null. The validation that this field is required is handled via the service layer validation.
           -->
         <xs:element name="tagTypeOrder" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The tag type's order relative to other tag types</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>An optional description of this tag type</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="tagTypeUpdateRequest" type="tagTypeUpdateRequest"/>
   <xs:complexType name="tagTypeUpdateRequest">
      <xs:all>
         <xs:element name="displayName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The tag type's name in plain text for human readability</xs:documentation>
            </xs:annotation>
         </xs:element>
         <!--
           This is required, but is left as optional here so the auto-generated object becomes "Integer" and not "int".
           That way, JSON objects that deserialize into the auto-generated object don't use the default int value of "0" and instead will leave
           the field as null. The validation that this field is required is handled via the service layer validation.
           -->
         <xs:element name="tagTypeOrder" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The tag type's order relative to other tag types</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>An optional description of this tag type</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="tagType" type="tagType"/>
   <xs:complexType name="tagType">
      <xs:all>
         <xs:element name="tagTypeKey" type="tagTypeKey">
            <xs:annotation>
               <xs:documentation>The tag type unique key</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="displayName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The tag type's name in plain text for human readability</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="tagTypeOrder" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The tag type's order relative to other tag types</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The tag type's description</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="tagTypeKeys" type="tagTypeKeys"/>
   <xs:complexType name="tagTypeKeys">
      <xs:sequence>
         <xs:element name="tagTypeKey" type="tagTypeKey" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>An ordered list of tag type keys</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="tagTypeKey">
      <xs:all>
         <xs:element name="tagTypeCode" type="xs:string">
            <xs:annotation>
               <xs:documentation>The tag type reference code</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="tagTypeSearchRequest" type="tagTypeSearchRequest">
      <xs:annotation>
         <xs:documentation>A wrapper for tag type search request. The request does not take any search keys or filters</xs:documentation>
      </xs:annotation>
   </xs:element>

   <xs:complexType name="tagTypeSearchRequest">
      <xs:all>
         <xs:element name="noData" type="xs:string" minOccurs="0" maxOccurs="0">
            <xs:annotation>
               <xs:documentation>There is nothing that is currently being posted, but we will have something in the future</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="tagTypeSearchResponse" type="tagTypeSearchResponse">
      <xs:annotation>
         <xs:documentation>A wrapper for tag type search response</xs:documentation>
      </xs:annotation>
   </xs:element>

   <xs:complexType name="tagTypeSearchResponse">
      <xs:all>
         <xs:element name="tagTypes" type="tagTypes">
            <xs:annotation>
               <xs:documentation>An ordered list of tag types. The list is sorted alphabetically by tag type's order value ascending</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="tagTypes">
      <xs:sequence>
         <xs:element name="tagType" type="tagType" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A wrapper for tag type information</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <!-- ***** Tag ***** -->

   <xs:element name="tagCreateRequest" type="tagCreateRequest"/>
   <xs:complexType name="tagCreateRequest">
      <xs:all>
         <xs:element name="tagKey" type="tagKey">
            <xs:annotation>
               <xs:documentation>The tag's unique key</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="displayName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The tag's name in plain text for human readability</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>An optional description</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="parentTagKey" type="tagKey" minOccurs="0">
            <xs:annotation>
               <xs:documentation>An optional parent tag's unique key</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="tagUpdateRequest" type="tagUpdateRequest"/>
   <xs:complexType name="tagUpdateRequest">
      <xs:all>
         <xs:element name="displayName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The tag's name in plain text for human readability</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>An optional description</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="parentTagKey" type="tagKey" minOccurs="0">
            <xs:annotation>
               <xs:documentation>An optional parent tag's unique key</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="tag" type="tag"/>
   <xs:complexType name="tag">
      <xs:all>
         <xs:element name="id" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The internal identifier that uniquely references a Tag</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="tagKey" type="tagKey">
            <xs:annotation>
               <xs:documentation>The tag's unique key</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="displayName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The tag's name in plain text for human readability</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The tag's description</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="userId" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The User ID of the user who created this tag</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="lastUpdatedByUserId" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The User ID of the user who last updated this tag</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="updatedTime" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The timestamp of when it is last updated</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="parentTagKey" type="tagKey" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The parent tag's unique key</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="hasChildren" type="xs:boolean" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A boolean flag that shows whether this tag has further children</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="tagListResponse" type="tagListResponse"/>
   <xs:complexType name="tagListResponse">
      <xs:all>
         <xs:element name="tagKey" type="tagKey" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The tag's unique key</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="parentTagKey" type="tagKey" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The parent tag's unique key</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="tagChildren" type="tagChildren" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The list of children tags</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="tagChildren">
      <xs:sequence>
         <xs:element name="tagChild" type="tagChild" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>An ordered list of children tags</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="tagChild">
      <xs:all>
         <xs:element name="tagKey" type="tagKey">
            <xs:annotation>
               <xs:documentation>The tag's unique key</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="hasChildren" type="xs:boolean">
            <xs:annotation>
               <xs:documentation>A boolean flag that shows whether this tag has further children</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="tagKey">
      <xs:all>
         <xs:element name="tagTypeCode" type="xs:string">
            <xs:annotation>
               <xs:documentation>The tag type reference code</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="tagCode" type="xs:string">
            <xs:annotation>
               <xs:documentation>The tag reference code</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="tagSearchRequest" type="tagSearchRequest">
      <xs:annotation>
         <xs:documentation>A wrapper for tag search request. The request accept only a single search filter and a single search key</xs:documentation>
      </xs:annotation>
   </xs:element>

   <xs:complexType name="tagSearchRequest">
      <xs:all>
         <xs:element name="tagSearchFilters" type="tagSearchFilters" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A list of tag search filters. Only a single optional search filter is supported</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="tagSearchFilters">
      <xs:sequence>
         <xs:element name="tagSearchFilter" type="tagSearchFilter" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A tag search filter</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="tagSearchFilter">
      <xs:all>
         <xs:element name="tagSearchKeys" type="tagSearchKeys">
            <xs:annotation>
               <xs:documentation>A list of tag search keys. Only a single search key is supported</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="tagSearchKeys">
      <xs:sequence>
         <xs:element name="tagSearchKey" type="tagSearchKey" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A tag search key</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="tagSearchKey">
      <xs:all>
         <xs:element name="tagTypeCode" type="xs:string">
            <xs:annotation>
               <xs:documentation>The tag type reference code</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="parentTagCode" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>An optional tag reference code of the parent tag</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="isParentTagNull" type="xs:boolean" minOccurs="0">
            <xs:annotation>
               <xs:documentation>An optional boolean flag that specifies if parent tag should not be set for the tags that we want to retrieve
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="tagSearchResponse" type="tagSearchResponse">
      <xs:annotation>
         <xs:documentation>A wrapper for tag search response</xs:documentation>
      </xs:annotation>
   </xs:element>

   <xs:complexType name="tagSearchResponse">
      <xs:all>
         <xs:element name="tags" type="tags">
            <xs:annotation>
               <xs:documentation>An ordered list of tags. The list is sorted alphabetically by tag's display name ascending</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="tags">
      <xs:sequence>
         <xs:element name="tag" type="tag" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A wrapper for tag information</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <!-- ***** Business Object Definition ***** -->

   <xs:element name="businessObjectDefinitionCreateRequest" type="businessObjectDefinitionCreateRequest"/>
   <xs:complexType name="businessObjectDefinitionCreateRequest">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of a valid Namespace known by the system</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name for this Business Object Definition</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="dataProviderName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of a valid Data Provider known by the system</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>An optional description</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="displayName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>An optional business friendly name</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="attributes" type="attributes" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Custom user-defined metadata associated with this Business Object Definition. "name" is the attribute name (i.e. the key) and
                  "value" is the attribute value.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDefinitionUpdateRequest" type="businessObjectDefinitionUpdateRequest"/>
   <xs:complexType name="businessObjectDefinitionUpdateRequest">
      <xs:all>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>An optional description</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="displayName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>An optional business friendly name</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="attributes" type="attributes" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Custom user-defined metadata associated with this Business Object Definition. "name" is the attribute name (i.e. the key) and
                  "value" is the attribute value.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDefinitionDescriptiveInformationUpdateRequest" type="businessObjectDefinitionDescriptiveInformationUpdateRequest"/>
   <xs:complexType name="businessObjectDefinitionDescriptiveInformationUpdateRequest">
      <xs:all>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>An optional description</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="displayName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>An optional business friendly name for business object definition</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="descriptiveBusinessObjectFormat" type="descriptiveBusinessObjectFormatUpdateRequest" minOccurs="0">
            <xs:annotation>
               <xs:documentation>An optional business object definition descriptive format update request</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDefinition" type="businessObjectDefinition"/>
   <xs:complexType name="businessObjectDefinition">
      <xs:all>
         <xs:element name="id" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The internal identifier that uniquely references a Business Object Definition</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of a valid Namespace known by the system</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name for this Business Object Definition</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="dataProviderName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The name of a valid Data Provider known by the system</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>An optional description</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="shortDescription" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  An optional short-description. This is actually the 'description' field truncated to a configurable number of characters.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="displayName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>An optional business friendly name</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="attributes" type="attributes" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Custom user-defined metadata associated with this Business Object Definition. "name" is the attribute name (i.e. the key) and
                  "value" is the attribute value
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="descriptiveBusinessObjectFormat" type="descriptiveBusinessObjectFormat" minOccurs="0">
            <xs:annotation>
               <xs:documentation>An optional business object definition descriptive format. The descriptive format is the single Business Object Format that
                  will be used to represent this Business Object Definition to consumers
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="sampleDataFiles" type="sampleDataFiles" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  An optional list of sample data files associated with the Business Object Definition
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="createdByUserId" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The User ID of the user who created this business object definition</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="lastUpdatedByUserId" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The User ID of the user who last updated this business object definition</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="lastUpdatedOn" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The timestamp when this business object definition was last updated on</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDefinitionKeys" type="businessObjectDefinitionKeys"/>
   <xs:complexType name="businessObjectDefinitionKeys">
      <xs:sequence>
         <xs:element name="businessObjectDefinitionKey" type="businessObjectDefinitionKey" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Definition</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="businessObjectDefinitionKey">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of a valid Namespace known by the system</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name for this Business Object Definition</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="descriptiveBusinessObjectFormat">
      <xs:all>
         <xs:element name="businessObjectFormatUsage" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Usage of this Business Object Format - a string describing how this format is used. Often used as a label for the Business
                  Object Format
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatFileType" type="xs:string">
            <xs:annotation>
               <xs:documentation>The File type for this Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatVersion" type="xs:int">
            <xs:annotation>
               <xs:documentation>The numeric version of a Business Object Format. Each time a format is registered, the new version will be the previous version
                  + 1
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="descriptiveBusinessObjectFormatUpdateRequest">
      <xs:all>
         <xs:element name="businessObjectFormatUsage" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Usage of this Business Object Format - a string describing how this format is used. Often used as a label for the Business
                  Object Format.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatFileType" type="xs:string">
            <xs:annotation>
               <xs:documentation>The File type for this Business Object Definition</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="sampleDataFiles">
      <xs:sequence>
         <xs:element name="sampleDataFile" type="sampleDataFile" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>
                  A sample data file associated with the Business Object Definition. The data in this file is expected to match the schema of the
                  descriptiveFormat for this Business Object Definition – but the data in this file is not validated against the descriptiveFormat schema at
                  this time
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="sampleDataFile">
      <xs:all>
         <xs:element name="directoryPath" type="xs:string">
            <xs:annotation>
               <xs:documentation>The directory path of the sample data file. Note that directory path will contain a trailing "directory" separator, thus the
                  caller needs to concatenate the directory path and the file name as is in order to construct a fully qualified path for the sample data file
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="fileName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the sample data file</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** Business Object Definition Search ***** -->

   <xs:element name="businessObjectDefinitionSearchRequest" type="businessObjectDefinitionSearchRequest">
      <xs:annotation>
         <xs:documentation>A wrapper for business Object Definition search request. The request accept only a single search filter and a single search key
         </xs:documentation>
      </xs:annotation>
   </xs:element>

   <xs:element name="businessObjectDefinitionIndexSearchRequest" type="businessObjectDefinitionIndexSearchRequest">
      <xs:annotation>
         <xs:documentation>A wrapper for business Object Definition indexed search request. The request accepts multiple search filters and a multiple search
            keys
         </xs:documentation>
      </xs:annotation>
   </xs:element>

   <xs:complexType name="businessObjectDefinitionIndexSearchRequest">
      <xs:all>
         <xs:element name="businessObjectDefinitionSearchFilters" type="businessObjectDefinitionSearchFilters" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A list of business Object Definition indexed search filters. Multiple search filters are supported</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="facetFields" type="facetFields" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A list of Facet Fields to be included with the response. Only Tag facet information is supported</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="businessObjectDefinitionSearchRequest">
      <xs:all>
         <xs:element name="businessObjectDefinitionSearchFilters" type="businessObjectDefinitionSearchFilters" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A list of business Object Definition search filters. Only a single search filter is supported</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="businessObjectDefinitionSearchFilters">
      <xs:sequence>
         <xs:element name="businessObjectDefinitionSearchFilter" type="businessObjectDefinitionSearchFilter" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A business Object Definition search filter</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="businessObjectDefinitionSearchFilter">
      <xs:all>
         <xs:element name="businessObjectDefinitionSearchKeys" type="businessObjectDefinitionSearchKeys">
            <xs:annotation>
               <xs:documentation>A list of business Object Definition search keys.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="businessObjectDefinitionSearchKeys">
      <xs:sequence>
         <xs:element name="businessObjectDefinitionSearchKey" type="businessObjectDefinitionSearchKey" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A business Object Definition search key</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="businessObjectDefinitionSearchKey">
      <xs:all>
         <xs:element name="tagKey" type="tagKey">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Tag</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="includeTagHierarchy" type="xs:boolean" minOccurs="0">
            <xs:annotation>
               <xs:documentation>An optional boolean flag that specifies if business object definition associated with entire tag hierarchy is to be retrieved
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDefinitionSearchResponse" type="businessObjectDefinitionSearchResponse"/>
   <xs:complexType name="businessObjectDefinitionSearchResponse">
      <xs:all>
         <xs:element name="businessObjectDefinitions" type="businessObjectDefinitions" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  Values that identify a business object definition search response.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDefinitionIndexSearchResponse" type="businessObjectDefinitionIndexSearchResponse"/>
   <xs:complexType name="businessObjectDefinitionIndexSearchResponse">
      <xs:all>
         <xs:element name="businessObjectDefinitions" type="businessObjectDefinitions" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  Values that identify a business object definition search response.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="facets" type="facets" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  Values that identifies a list of facet information response.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="facets" type="facets"/>
   <xs:complexType name="facets">
      <xs:sequence>
         <xs:element name="facet" type="facet" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>facet information</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="businessObjectDefinitions" type="businessObjectDefinitions"/>
   <xs:complexType name="businessObjectDefinitions">
      <xs:sequence>
         <xs:element name="businessObjectDefinition" type="businessObjectDefinition" minOccurs="0" maxOccurs="unbounded">
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="facetFields">
      <xs:sequence>
         <xs:element name="facetField" type="xs:string" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>The Facet field information to be included with the response. Only Tag facet field is supported.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="facet" type="facet"/>
   <xs:complexType name="facet">
      <xs:all>
         <xs:element name="facetDisplayName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Display name of the facet</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="facetCount" type="xs:long" minOccurs="0">
            <xs:annotation>
               <xs:documentation>count of the facet</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="facetType" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Type of the facet</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="facetId" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>unique identifier of the facet</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="facets" type="facets" minOccurs="0">
            <xs:annotation>
               <xs:documentation>list of facets</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>


   <xs:element name="businessObjectDefinitionIndexResponse" type="businessObjectDefinitionIndexResponse"/>
   <xs:complexType name="businessObjectDefinitionIndexResponse">
      <xs:all>
         <xs:element name="indexStartTime" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The timestamp of when the index creation started</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDefinitionValidateResponse" type="businessObjectDefinitionValidateResponse"/>
   <xs:complexType name="businessObjectDefinitionValidateResponse">
      <xs:all>
         <xs:element name="validateStartTime" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The timestamp of when the index validation started</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="sizeCheckPassed" type="xs:boolean">
            <xs:annotation>
               <xs:documentation>A Y/N flag that shows whether the total number of business object definitions in the database is the same as the total number
                  in the index
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="spotCheckRandomPassed" type="xs:boolean">
            <xs:annotation>
               <xs:documentation>A Y/N flag that shows whether the spot check that verifies a percentage of random business object definitions in the database
                  are the same as the indexed documents
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="spotCheckMostRecentPassed" type="xs:boolean">
            <xs:annotation>
               <xs:documentation>A Y/N flag that shows whether the spot check that verifies the most recently modified business object definitions in the
                  database are the same as the indexed documents
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** Business Object Definition Column ***** -->

   <xs:element name="businessObjectDefinitionColumnCreateRequest" type="businessObjectDefinitionColumnCreateRequest"/>
   <xs:complexType name="businessObjectDefinitionColumnCreateRequest">
      <xs:all>
         <xs:element name="businessObjectDefinitionColumnKey" type="businessObjectDefinitionColumnKey">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Definition Column</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="schemaColumnName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the schema column</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Description of the Business Object Definition Column</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDefinitionColumnUpdateRequest" type="businessObjectDefinitionColumnUpdateRequest"/>
   <xs:complexType name="businessObjectDefinitionColumnUpdateRequest">
      <xs:all>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Description of the Business Object Definition Column</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDefinitionColumn" type="businessObjectDefinitionColumn"/>
   <xs:complexType name="businessObjectDefinitionColumn">
      <xs:all>
         <xs:element name="id" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The internal Id that uniquely references a Business Object Definition Column</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionColumnKey" type="businessObjectDefinitionColumnKey">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Definition Column</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="schemaColumnName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The name of the schema column</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Description of the Business Object Definition Column</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDefinitionColumnKeys" type="businessObjectDefinitionColumnKeys"/>
   <xs:complexType name="businessObjectDefinitionColumnKeys">
      <xs:sequence>
         <xs:element name="businessObjectDefinitionColumnKey" type="businessObjectDefinitionColumnKey" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Definition Column</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="businessObjectDefinitionColumnKey">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The namespace of the Business Object Definition</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the Business Object Definition</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionColumnName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the Business Object Definition Column</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDefinitionColumnSearchRequest" type="businessObjectDefinitionColumnSearchRequest">
      <xs:annotation>
         <xs:documentation>A wrapper for a business object definition column search request. The request will accept only a single search filter and a single
            search key
         </xs:documentation>
      </xs:annotation>
   </xs:element>

   <xs:complexType name="businessObjectDefinitionColumnSearchRequest">
      <xs:sequence>
         <xs:element name="businessObjectDefinitionColumnSearchFilters" type="businessObjectDefinitionColumnSearchFilters">
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="businessObjectDefinitionColumnSearchFilters">
      <xs:sequence>
         <xs:element name="businessObjectDefinitionColumnSearchFilter" type="businessObjectDefinitionColumnSearchFilter" minOccurs="1" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A business object definition column search filter</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="businessObjectDefinitionColumnSearchFilter">
      <xs:sequence>
         <xs:element name="businessObjectDefinitionColumnSearchKeys" type="businessObjectDefinitionColumnSearchKeys">
            <xs:annotation>
               <xs:documentation>A list of business object definition column search keys. Only a single search key is supported</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="businessObjectDefinitionColumnSearchKeys">
      <xs:sequence>
         <xs:element name="businessObjectDefinitionColumnSearchKey" type="businessObjectDefinitionColumnSearchKey" minOccurs="1" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A business object definition column search key</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="businessObjectDefinitionColumnSearchKey">
      <xs:all>
         <xs:element name="namespace" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The namespace to which a business object definition column is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The name of the business object definition to which a business object definition column is related</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDefinitionColumnSearchResponse" type="businessObjectDefinitionColumnSearchResponse">
      <xs:annotation>
         <xs:documentation>A wrapper for business object definition column search response</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="businessObjectDefinitionColumnSearchResponse">
      <xs:all>
         <xs:element name="businessObjectDefinitionColumns" type="businessObjectDefinitionColumns">
            <xs:annotation>
               <xs:documentation>An ordered list of business object definition columns. The list is sorted alphabetically by business object definition column
                  name ascending
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="businessObjectDefinitionColumns">
      <xs:sequence>
         <xs:element name="businessObjectDefinitionColumn" type="businessObjectDefinitionColumn" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A wrapper for business object definition column information</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <!-- ***** Business Object Definition Tag ***** -->

   <xs:element name="businessObjectDefinitionTagCreateRequest" type="businessObjectDefinitionTagCreateRequest"/>
   <xs:complexType name="businessObjectDefinitionTagCreateRequest">
      <xs:all>
         <xs:element name="businessObjectDefinitionTagKey" type="businessObjectDefinitionTagKey">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Definition Tag</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDefinitionTag" type="businessObjectDefinitionTag"/>
   <xs:complexType name="businessObjectDefinitionTag">
      <xs:all>
         <xs:element name="id" type="xs:int">
            <xs:annotation>
               <xs:documentation>The internal Id that uniquely references a Business Object Definition Tag</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionTagKey" type="businessObjectDefinitionTagKey">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Definition Tag</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDefinitionTagKeys" type="businessObjectDefinitionTagKeys"/>
   <xs:complexType name="businessObjectDefinitionTagKeys">
      <xs:sequence>
         <xs:element name="businessObjectDefinitionTagKey" type="businessObjectDefinitionTagKey" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Definition Tag</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="businessObjectDefinitionTagKey">
      <xs:all>
         <xs:element name="businessObjectDefinitionKey" type="businessObjectDefinitionKey">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Definition</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="tagKey" type="tagKey">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Tag</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** Business Object Definition Subject Matter Expert ***** -->

   <xs:element name="businessObjectDefinitionSubjectMatterExpertCreateRequest" type="businessObjectDefinitionSubjectMatterExpertCreateRequest"/>
   <xs:complexType name="businessObjectDefinitionSubjectMatterExpertCreateRequest">
      <xs:all>
         <xs:element name="businessObjectDefinitionSubjectMatterExpertKey" type="businessObjectDefinitionSubjectMatterExpertKey">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Definition Subject Matter Expert</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDefinitionSubjectMatterExpert" type="businessObjectDefinitionSubjectMatterExpert"/>
   <xs:complexType name="businessObjectDefinitionSubjectMatterExpert">
      <xs:all>
         <xs:element name="id" type="xs:int">
            <xs:annotation>
               <xs:documentation>The internal Id that uniquely references a Business Object Definition Subject Matter Expert</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionSubjectMatterExpertKey" type="businessObjectDefinitionSubjectMatterExpertKey">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Definition Subject Matter Expert</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDefinitionSubjectMatterExpertKeys" type="businessObjectDefinitionSubjectMatterExpertKeys"/>
   <xs:complexType name="businessObjectDefinitionSubjectMatterExpertKeys">
      <xs:sequence>
         <xs:element name="businessObjectDefinitionSubjectMatterExpertKey" type="businessObjectDefinitionSubjectMatterExpertKey" minOccurs="0"
                     maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Definition Subject Matter Expert</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="businessObjectDefinitionSubjectMatterExpertKey">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The namespace of the Business Object Definition</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the Business Object Definition</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="userId" type="xs:string">
            <xs:annotation>
               <xs:documentation>The user id of the Subject Matter Expert</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="subjectMatterExpert" type="subjectMatterExpert"/>
   <xs:complexType name="subjectMatterExpert">
      <xs:all>
         <xs:element name="subjectMatterExpertKey" type="subjectMatterExpertKey">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Subject Matter Expert</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="contactDetails" type="subjectMatterExpertContactDetails">
            <xs:annotation>
               <xs:documentation>The contact details of the Subject Matter Expert</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="subjectMatterExpertKey">
      <xs:all>
         <xs:element name="userId" type="xs:string">
            <xs:annotation>
               <xs:documentation>The user id of the Subject Matter Expert. This must be a fully qualified name as the value will be utilized to look up contact
                  information in LDAP
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="subjectMatterExpertContactDetails">
      <xs:all>
         <xs:element name="fullName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The full name of the Subject Matter Expert</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="jobTitle" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The job title of the Subject Matter Expert</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="emailAddress" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The e-mail address of the Subject Matter Expert</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="telephoneNumber" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The telephone number of the Subject Matter Expert</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** File Type ***** -->

   <xs:element name="fileTypeKeys" type="fileTypeKeys"/>
   <xs:complexType name="fileTypeKeys">
      <xs:sequence>
         <xs:element name="fileTypeKey" type="fileTypeKey" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Value that uniquely identifies a File Type</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="fileTypeKey">
      <xs:all>
         <xs:element name="fileTypeCode" type="xs:string">
            <xs:annotation>
               <xs:documentation>The File Type code</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** Partition Key Group ***** -->

   <xs:element name="partitionKeyGroupCreateRequest" type="partitionKeyGroupCreateRequest"/>
   <xs:complexType name="partitionKeyGroupCreateRequest">
      <xs:all>
         <xs:element name="partitionKeyGroupKey" type="partitionKeyGroupKey">
            <xs:annotation>
               <xs:documentation>Value that uniquely identifies a Partition Key Group</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="partitionKeyGroup" type="partitionKeyGroup"/>
   <xs:complexType name="partitionKeyGroup">
      <xs:all>
         <xs:element name="partitionKeyGroupKey" type="partitionKeyGroupKey">
            <xs:annotation>
               <xs:documentation>Value that uniquely identifies a Partition Key Group</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="partitionKeyGroupKeys" type="partitionKeyGroupKeys"/>
   <xs:complexType name="partitionKeyGroupKeys">
      <xs:sequence>
         <xs:element name="partitionKeyGroupKey" type="partitionKeyGroupKey" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Value that uniquely identifies a Partition Key Group</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="partitionKeyGroupKey">
      <xs:all>
         <xs:element name="partitionKeyGroupName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the Partition Key Group</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** Expected Partition Value ***** -->

   <xs:element name="expectedPartitionValuesCreateRequest" type="expectedPartitionValuesCreateRequest"/>
   <xs:complexType name="expectedPartitionValuesCreateRequest">
      <xs:all>
         <xs:element name="partitionKeyGroupKey" type="partitionKeyGroupKey">
            <xs:annotation>
               <xs:documentation>Value that uniquely identifies a Partition Key Group</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="expectedPartitionValues" type="expectedPartitionValues">
            <xs:annotation>
               <xs:documentation>List of Expected Partition Values</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="expectedPartitionValueInformation" type="expectedPartitionValueInformation"/>
   <xs:complexType name="expectedPartitionValueInformation">
      <xs:all>
         <xs:element name="expectedPartitionValueKey" type="expectedPartitionValueKey">
            <xs:annotation>
               <xs:documentation>Value that uniquely identifies an Expected Partition Value</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="expectedPartitionValuesInformation" type="expectedPartitionValuesInformation"/>
   <xs:complexType name="expectedPartitionValuesInformation">
      <xs:all>
         <xs:element name="partitionKeyGroupKey" type="partitionKeyGroupKey">
            <xs:annotation>
               <xs:documentation>Value that uniquely identifies a Partition Key Group</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="expectedPartitionValues" type="expectedPartitionValues">
            <xs:annotation>
               <xs:documentation>List of Expected Partition Values</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="expectedPartitionValuesDeleteRequest" type="expectedPartitionValuesDeleteRequest"/>
   <xs:complexType name="expectedPartitionValuesDeleteRequest">
      <xs:all>
         <xs:element name="partitionKeyGroupKey" type="partitionKeyGroupKey">
            <xs:annotation>
               <xs:documentation>Value that uniquely identifies a Partition Key Group</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="expectedPartitionValues" type="expectedPartitionValues">
            <xs:annotation>
               <xs:documentation>List of Expected Partition Values</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="expectedPartitionValueKey">
      <xs:all>
         <xs:element name="partitionKeyGroupName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the Partition Key Group associated with the Expected Partition Value</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="expectedPartitionValue" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Expected Partition Value</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="expectedPartitionValues">
      <xs:sequence>
         <xs:element name="expectedPartitionValue" type="xs:string" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>The Expected Partition Value</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <!-- ***** Business Object Format ***** -->

   <xs:element name="businessObjectFormatCreateRequest" type="businessObjectFormatCreateRequest"/>
   <xs:complexType name="businessObjectFormatCreateRequest">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Namespace to which this Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the Business Object Definition to which this Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatUsage" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Usage of this Business Object Format - a string describing how this format is used. Often used as a label for the Business
                  Object Format. Does not have to be unique in the system, the Usage string is frequently shared across formats for multiple Business Object
                  Definitions
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatFileType" type="xs:string">
            <xs:annotation>
               <xs:documentation>A File Type known to the system that describes the file type of data stored under this Business Object Format
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="partitionKey" type="xs:string">
            <xs:annotation>
               <xs:documentation>The partition key for this Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Description of the Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="attributes" type="attributes" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Custom user-defined metadata associated with this Business Object Format. "name" is the attribute name (i.e. the key) and
                  "value" is the attribute value.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="attributeDefinitions" type="attributeDefinitions" minOccurs="0">
            <xs:annotation>
               <xs:documentation>List of attribute definitions (for storage of custom user-defined metadata with objects) which are required to be specified
                  when registering Business Object Data against this format. This list will define which metadata must be specified, but additional metadata can
                  still be registered which is not specified in this list. The metadata (attributes) will allow applications to store custom data with
                  registered data for use by consumers of the data
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="schema" type="schema" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The schema associated with this Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectFormatUpdateRequest" type="businessObjectFormatUpdateRequest"/>
   <xs:complexType name="businessObjectFormatUpdateRequest">
      <xs:all>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Description of the Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="attributes" type="attributes" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Custom user-defined metadata associated with this Business Object Format. "name" is the attribute name (i.e. the key) and
                  "value" is the attribute value.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="schema" type="schema" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The schema associated with this Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectFormat" type="businessObjectFormat"/>
   <xs:complexType name="businessObjectFormat">
      <xs:all>
         <xs:element name="id" type="xs:int">
            <xs:annotation>
               <xs:documentation>The internal identifier that uniquely identifies a Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Namespace to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the Business Object Definition to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatUsage" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Usage of this Business Object Format - a string describing how this format is used. Often used as a label for the Business
                  Object Format. Does not have to be unique in the system, the Usage string is frequently shared across formats for multiple Business Object
                  Definitions
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatFileType" type="xs:string">
            <xs:annotation>
               <xs:documentation>A File Type known to the system that describes the file type of data stored under a Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatVersion" type="xs:int">
            <xs:annotation>
               <xs:documentation>The numeric version of a Business Object Format. Each time a format is registered, the new version will be the previous version
                  + 1
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="latestVersion" type="xs:boolean">
            <xs:annotation>
               <xs:documentation>A Y/N flag that shows whether this instance of format is the latest or not. Once a new version of format is registered, any
                  previous versions will no longer be the latest
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="partitionKey" type="xs:string">
            <xs:annotation>
               <xs:documentation>The partition key for this Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Description of the Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="attributes" type="attributes" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Custom user-defined metadata associated with this Business Object Format. "name" is the attribute name (i.e. the key) and
                  "value" is the attribute value.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="attributeDefinitions" type="attributeDefinitions" minOccurs="0">
            <xs:annotation>
               <xs:documentation>List of attribute definitions (for storage of custom user-defined metadata with objects) which are required to be specified
                  when registering Business Object Data against this format. This list will define which metadata must be specified, but additional metadata can
                  still be registered which is not specified in this list. The metadata (attributes) will allow applications to store custom data with
                  registered data for use by consumers of the data
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="schema" type="schema" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The schema associated with this Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="attributeDefinitions">
      <xs:sequence>
         <xs:element name="attributeDefinition" type="attributeDefinition" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A single metadata attribute definition. For now, only the attribute "name" can be specified which implies the attribute is
                  required. In the future, we may expand how this element is used to support specification of details such as data type, min/max, etc.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <!--
     For now, the existence of an attribute definition implies that it is required. In the future, we will more than likely add a "required" boolean
     to this type which will allow the user to specify whether the attribute is required or not, in addition to other attribute definition properties
     (e.g. type, min length, max length, etc.).
    -->
   <xs:complexType name="attributeDefinition">
      <xs:all>
         <xs:element name="name" type="xs:string">
            <xs:annotation>
               <xs:documentation>Name of an Attribute that will be required when registering a Business Object Data of this Business Object Format
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="publish" type="xs:boolean" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  If true, this business object data attribute will be published in notification messages
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="schema">
      <xs:all>
         <xs:element name="columns" type="schemaColumns">
            <xs:annotation>
               <xs:documentation>A container for Schema Columns that are present in data file(s) for this Business Object Format. Required when Schema is
                  present
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="partitions" type="schemaColumns" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A container for partition columns in a specific schema. A schema might have zero, one or more partition columns. If a partition
                  column is present in the data file(s), it should also be listed as a regular column in the schema with all column information matching (case
                  sensitive)
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="nullValue" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The string to use for the null value (e.g. "\\\\N"). Please note that a null value is allowed to be a whitespace character.
                  XML escaping should be used when specifying non-ASCII characters.
                  Note: when passing in an empty String, the response XML will return a NULL value (i.e. the tag will be absent). Generate DDL calls will show
                  the correct empty String value wrapped in single-quotes.
                  Required when Schema is present
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="delimiter" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The field delimiter (e.g. "|"). Please note that a field delimiter is allowed to be a whitespace character.
                  XML escaping should be used when specifying non-ASCII characters
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="escapeCharacter" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The escape character (e.g. "\\\\").
                  XML escaping should be used when specifying non-ASCII characters.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="partitionKeyGroup" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The partition key group that this schema's partition or sub-partition key belongs to. This value will be used to identify the
                  ordered set of Expected Partition Values when determining Business Object Data Availability or generating DDL using partition value ranges. A
                  Partition Key Group value is required in the Business Object Format in order to use partition value ranges with the Availability and DDL
                  services
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="schemaColumns">
      <xs:sequence>
         <xs:element name="column" type="schemaColumn" maxOccurs="1000">
            <xs:annotation>
               <xs:documentation>A container for the Schema Column information. Required when Columns is present</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="schemaColumn">
      <xs:all>
         <xs:element name="name" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the schema column. Required when Column is present</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="type" type="xs:string">
            <xs:annotation>
               <xs:documentation>The data type of the schema column. Required when Column is present</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="size" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The column size. This is a string value since, for "NUMERIC" and "DECIMAL" data types, we should be able to specify both
                  the maximum number of digits (p) that are present in the number and the maximum number of decimal places (s) as a "p,s" string. Required when
                  Column is present
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="required" type="xs:boolean" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Values true|false. If true, a value isis required for the column (not nullable)</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="defaultValue" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Default value for the column</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Description of the column</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectFormatKeys" type="businessObjectFormatKeys"/>
   <xs:complexType name="businessObjectFormatKeys">
      <xs:sequence>
         <xs:element name="businessObjectFormatKey" type="businessObjectFormatKey" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="businessObjectFormatKey">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Namespace to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the Business Object Definition to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatUsage" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Usage of this Business Object Format - a string describing how this format is used. Often used as a label for the Business
                  Object Format. Does not have to be unique in the system, the Usage string is frequently shared across formats for multiple Business Object
                  Definitions
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatFileType" type="xs:string">
            <xs:annotation>
               <xs:documentation>A File Type known to the system that describes the file type of data stored under a Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <!--
           This is required, but is left as optional here so the auto-generated object becomes "Integer" and not "int".
           That way, JSON objects that deserialize into the auto-generated object don't use the default int value of "0" and instead will leave
           the field as null. The validation that this field is required is handled via the service layer validation.
           -->
         <xs:element name="businessObjectFormatVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The numeric version of a Business Object Format. Each time a format is registered, the new version will be the previous version
                  + 1
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** Custom DDL ***** -->

   <xs:element name="customDdlCreateRequest" type="customDdlCreateRequest"/>
   <xs:complexType name="customDdlCreateRequest">
      <xs:all>
         <xs:element name="customDdlKey" type="customDdlKey">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Custom DDL</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="ddl" type="xs:string">
            <xs:annotation>
               <xs:documentation>A container for the custom DDL code</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="customDdl" type="customDdl"/>
   <xs:complexType name="customDdl">
      <xs:all>
         <xs:element name="id" type="xs:int">
            <xs:annotation>
               <xs:documentation>The internal Id that uniquely references the newly created custom DDL</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="customDdlKey" type="customDdlKey">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Custom DDL</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="ddl" type="xs:string">
            <xs:annotation>
               <xs:documentation>A container for the custom DDL code</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="customDdlUpdateRequest" type="customDdlUpdateRequest"/>
   <xs:complexType name="customDdlUpdateRequest">
      <xs:all>
         <xs:element name="ddl" type="xs:string">
            <xs:annotation>
               <xs:documentation>A container for the custom DDL code</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="customDdlKeys" type="customDdlKeys"/>
   <xs:complexType name="customDdlKeys">
      <xs:sequence>
         <xs:element name="customDdlKey" type="customDdlKey" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Custom DDL</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="customDdlKey">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Namespace to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the Business Object Definition to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatUsage" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Usage of this Business Object Format - a string describing how this format is used. Often used as a label for the Business
                  Object Format. Does not have to be unique in the system, the Usage string is frequently shared across formats for multiple Business Object
                  Definitions
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatFileType" type="xs:string">
            <xs:annotation>
               <xs:documentation>A File Type known to the system that describes the file type of data stored under a Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <!--
           This is required, but is left as optional here so the auto-generated object becomes "Integer" and not "int".
           That way, JSON objects that deserialize into the auto-generated object don't use the default int value of "0" and instead will leave
           the field as null. The validation that this field is required is handled via the service layer validation.
           -->
         <xs:element name="businessObjectFormatVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The numeric version of a Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="customDdlName" type="xs:string">
            <xs:annotation>
               <xs:documentation>A user-defined descriptive name for this Custom DDL</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** Business Object Format DDL ***** -->

   <xs:element name="businessObjectFormatDdlRequest" type="businessObjectFormatDdlRequest"/>
   <xs:complexType name="businessObjectFormatDdlRequest">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Namespace to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the Business Object Definition to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatUsage" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Usage of this Business Object Format - a string describing how this format is used. Often used as a label for the Business
                  Object Format. Does not have to be unique in the system, the Usage string is frequently shared across formats for multiple Business Object
                  Definitions
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatFileType" type="xs:string">
            <xs:annotation>
               <xs:documentation>A File Type known to the system that describes the file type of data stored under a Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <!--
           This is required, but is left as optional here so the auto-generated object becomes "Integer" and not "int".
           That way, JSON objects that deserialize into the auto-generated object don't use the default int value of "0" and instead will leave
           the field as null. The validation that this field is required is handled via the service layer validation.
           -->
         <xs:element name="businessObjectFormatVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The numeric version of a Business Object Format. If not supplied, the latest version will be used</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="outputFormat" type="businessObjectDataDdlOutputFormatEnum">
            <xs:annotation>
               <xs:documentation>The output format for the generated DDL. The only format currently supported is HIVE_13_DDL</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="tableName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The table name to be used in the generated DDL</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="customDdlName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The name of the Custom DDL. When Custom DDL name is specified, the Custom DDL which had previously been stored Business Object
                  Format is returned instead of generated DDL. Must not be specified when replaceColumns is true
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="includeDropTableStatement" type="xs:boolean" minOccurs="0">
            <xs:annotation>
               <xs:documentation>If true, drop table statement for existing table will be added to the generated DDL. Must not be specified when replaceColumns
                  is true.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="includeIfNotExistsOption" type="xs:boolean" minOccurs="0">
            <xs:annotation>
               <xs:documentation>If true, IF NOT EXISTS option will be added to the CREATE TABLE ... statement in the generrated DDL. Please note that this
                  parameter value has no effect on the relative CREATE TABLE ... statement, if generated DDL uses custom DDL. Must not be specified when
                  replaceColumns is true.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="replaceColumns" type="xs:boolean" minOccurs="0">
            <xs:annotation>
               <xs:documentation>If true, an ALTER TABLE ... REPLACE COLUMNS will be generated</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectFormatDdl" type="businessObjectFormatDdl"/>
   <xs:complexType name="businessObjectFormatDdl">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Namespace to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the Business Object Definition to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatUsage" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Usage of this Business Object Format - a string describing how this format is used. Often used as a label for the Business
                  Object Format. Does not have to be unique in the system, the Usage string is frequently shared across formats for multiple Business Object
                  Definitions
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatFileType" type="xs:string">
            <xs:annotation>
               <xs:documentation>A File Type known to the system that describes the file type of data stored under a Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <!--
           This is required, but is left as optional here so the auto-generated object becomes "Integer" and not "int".
           That way, JSON objects that deserialize into the auto-generated object don't use the default int value of "0" and instead will leave
           the field as null. The validation that this field is required is handled via the service layer validation.
           -->
         <xs:element name="businessObjectFormatVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The numeric version of a Business Object Format. If not supplied, the latest version will be used</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="outputFormat" type="businessObjectDataDdlOutputFormatEnum">
            <xs:annotation>
               <xs:documentation>The output format for the generated DDL. The only format currently supported is HIVE_13_DDL</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="tableName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The table name to be used in the generated DDL</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="customDdlName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>he name of the Custom DDL. When Custom DDL name is specified, the Custom DDL which had previously been stored Business Object
                  Format is returned instead of generated DDL. Must not be specified when replaceColumns is true
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="ddl" type="xs:string">
            <xs:annotation>
               <xs:documentation>A container for the generated DDL code which contains DDL for all the objects in the collection</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** Business Object Format DDL Collection ***** -->

   <xs:element name="businessObjectFormatDdlCollectionRequest" type="businessObjectFormatDdlCollectionRequest"/>
   <xs:complexType name="businessObjectFormatDdlCollectionRequest">
      <xs:all>
         <xs:element name="businessObjectFormatDdlRequests" type="businessObjectFormatDdlRequests">
            <xs:annotation>
               <xs:documentation>A container for multiple Business Object Format requests</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="businessObjectFormatDdlRequests">
      <xs:sequence>
         <xs:element name="businessObjectFormatDdlRequest" type="businessObjectFormatDdlRequest" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="businessObjectFormatDdlCollectionResponse" type="businessObjectFormatDdlCollectionResponse"/>
   <xs:complexType name="businessObjectFormatDdlCollectionResponse">
      <xs:all>
         <xs:element name="businessObjectFormatDdlResponses" type="businessObjectFormatDdlResponses">
            <xs:annotation>
               <xs:documentation>A container for the Business Object Format responses</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="ddlCollection" type="xs:string">
            <xs:annotation>
               <xs:documentation>A container for the combined DDL for all Business Object Formats in the collection</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="businessObjectFormatDdlResponses">
      <xs:sequence>
         <xs:element name="businessObjectFormatDdl" type="businessObjectFormatDdl" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A container for the DDL for a single Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <!-- ***** Business Object Data ***** -->

   <xs:element name="s3KeyPrefixInformation" type="s3KeyPrefixInformation"/>
   <xs:complexType name="s3KeyPrefixInformation">
      <xs:all>
         <xs:element name="s3KeyPrefix" type="xs:string">
            <xs:annotation>
               <xs:documentation>The S3 key prefix to use when writing or accessing the data. Note that the S3 key prefix will not contain a trailing
                  "directory" separator and it will be up to the caller to append one as needed
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDataCreateRequest" type="businessObjectDataCreateRequest"/>
   <xs:complexType name="businessObjectDataCreateRequest">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Namespace to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the Business Object Definition to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatUsage" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Usage of this Business Object Format - a string describing how this format is used. Often used as a label for the Business
                  Object Format. Does not have to be unique in the system, the Usage string is frequently shared across formats for multiple Business Object
                  Definitions
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatFileType" type="xs:string">
            <xs:annotation>
               <xs:documentation>A File Type known to the system that describes the file type of data stored under a Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <!--
           This is required, but is left as optional here so the auto-generated object becomes "Integer" and not "int".
           That way, JSON objects that deserialize into the auto-generated object don't use the default int value of "0" and instead will leave
           the field as null. The validation that this field is required is handled via the service layer validation.
           -->
         <xs:element name="businessObjectFormatVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The Business Object Format Version for a previously registered Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="partitionKey" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Partition Key this Business Object Data is being registered with. This must be they Partition Key specified in the Business
                  Object Format
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="partitionValue" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Partition Value that this Business Object Data is associated with</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="subPartitionValues" type="subPartitionValues" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A list of Sub-Partition values associated with this Business Object Data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="status" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The status of the Business Object Data. One of the following values: VALID, UPLOADING, PENDING_VALID, PROCESSING, INVALID,
                  ARCHIVED, EXPIRED, or DELETED. Pre-registration status include UPLOADING, PENDING_VALID, and PROCESSING. Defaults to VALID if value is not
                  provided
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageUnits" type="storageUnitsCreateRequest">
            <xs:annotation>
               <xs:documentation>A container for Storage Units that contain data associated with the Business Object Data being registered</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="attributes" type="attributes" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Collection of name-value pairs. This can be used to store things such as S3 bucket names, validation flags, and custom
                  user-defined meta-data about this storage. Attributes values are required for certain keys that are defined as Attribute Definitions in the
                  Business Object Format
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataParents" type="businessObjectDataParents" minOccurs="0">
            <xs:annotation>
               <xs:documentation>An optional list of Business Object Data parents (i.e. predecessors) that were used/needed in the creation of this data. This
                  is used for data lineage. Each parent consists of the key data that uniquely defines a reference to a single Business Object Data.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="createNewVersion" type="xs:boolean" minOccurs="0">
            <xs:annotation>
               <xs:documentation>If true, a new Business Object Data Version will be created and registered that supercedes a previous version. If false, then
                  only an initial Business Object Data Version (version 0) is allowed to be registered
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="subPartitionValues">
      <xs:sequence>
         <xs:element name="partitionValue" type="xs:string" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>The Partition Value for a Sub-Partition that appears in the Business Object Format. Supply in the order that the Sub-Partition
                  keys are listed in the Business Object Format
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="storageUnitsCreateRequest">
      <xs:sequence>
         <xs:element name="storageUnit" type="storageUnitCreateRequest" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A container of Storage Directory and/or various Storage Files that constitute the data for this object and reside within a
                  specific Storage. Required when storageUnits is present
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="storageUnitCreateRequest">
      <xs:all>
         <xs:element name="storageName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the Storage that this Storage Unit is associated with. The Storage must be pre-existing in the system. Required
                  when storageUnit is present
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageDirectory" type="storageDirectory" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A container for a Storage Directory that resides within a specific Storage Unit. Required when storageUnit is present and one
                  of the following is true: storageFiles element is not present, discoverStorageFiles is enabled
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageFiles" type="storageFiles" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A container of various Storage Files that reside within a specific Storage Unit. Required when storageUnit is present and
                  storageDirectory is not. Note: storageFiles cannot be specified when discoverStorageFiles is enabled.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="discoverStorageFiles" type="xs:boolean" minOccurs="0">
            <xs:annotation>
               <xs:documentation>If true, enables the auto-discovery of all Storage Files in the specified Storage Directory. See notes on S3 consistency for
                  important information
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectData" type="businessObjectData"/>
   <xs:complexType name="businessObjectData">
      <xs:annotation>
         <xs:documentation>The business object data</xs:documentation>
      </xs:annotation>
      <xs:all>
         <xs:element name="id" type="xs:int">
            <xs:annotation>
               <xs:documentation>The internal Id that uniquely references the newly created Business Object Data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Namespace to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the Business Object Definition to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatUsage" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Usage of this Business Object Format - a string describing how this format is used. Often used as a label for the Business
                  Object Format. Does not have to be unique in the system, the Usage string is frequently shared across formats for multiple Business Object
                  Definitions
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatFileType" type="xs:string">
            <xs:annotation>
               <xs:documentation>A File Type known to the system that describes the file type of data stored under a Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatVersion" type="xs:int">
            <xs:annotation>
               <xs:documentation>The Business Object Format Version for a previously registered Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="partitionKey" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Partition Key this Business Object Data is being registered with. This must be they Partition Key specified in the Business
                  Object Format
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="partitionValue" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Partition Value that this Business Object Data is associated with</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="subPartitionValues" type="subPartitionValues" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A list of Sub-Partition values associated with this Business Object Data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="version" type="xs:int">
            <xs:annotation>
               <xs:documentation>The numeric version of a Business Object Data. Each time a new data object is registered, the new version will be the previous
                  version + 1
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="latestVersion" type="xs:boolean" minOccurs="0">
            <xs:annotation>
               <xs:documentation>*No longer in use* A boolean flag that shows whether this instance of data is the latest or not. Once a new version of data is
                  registered, any previous versions will no longer be the latest
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="status" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The status of the Business Object Data. One of the following values: VALID, UPLOADING, PENDING_VALID, PROCESSING, INVALID,
                  ARCHIVED, EXPIRED, or DELETED
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageUnits" type="storageUnits" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A container for the Storage Units associated with a Business Object Data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="attributes" type="attributes" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Collection of name-value pairs. This can be used to store things such as S3 bucket names, validation flags, and custom
                  user-defined meta-data about this storage. Attributes values are required for certain keys that are defined as Attribute Definitions in the
                  Business Object Format
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataParents" type="businessObjectDataParents" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A list of Business Object Data parents (i.e. predecessors) that were used/needed in the creation of this data. This is used for
                  data lineage. Each parent consists of the key data that uniquely defines a reference to a single Business Object Data.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataChildren" type="businessObjectDataChildren" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A list of Business Object Data children that were creation from this data. This is used for data lineage. Each child consists
                  of the key data that uniquely defines a reference to a single Business Object Data.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataStatusHistory" type="businessObjectDataStatusHistory" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Lists all business object data status change events for this business object data</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="storageUnits">
      <xs:sequence>
         <xs:element name="storageUnit" type="storageUnit" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A container of Storage Directory and/or various Storage Files that constitute the data for this object and reside within a
                  specific Storage.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="storageUnit">
      <xs:all>
         <xs:element name="storage" type="storage">
            <xs:annotation>
               <xs:documentation>The Storage for this Storage Unit</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageDirectory" type="storageDirectory" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A container for a Storage Directory that resides within a specific Storage Unit</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageFiles" type="storageFiles" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A container of various Storage Files that reside within a specific Storage Unit</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageUnitStatus" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The status of this Storage Unit. One of the following values: ENABLED, DISABLED, ARCHIVING, or RESTORING</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="storageDirectory">
      <xs:all>
         <xs:element name="directoryPath" type="xs:string">
            <xs:annotation>
               <xs:documentation>The fully qualified storage directory path</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="storageFiles">
      <xs:sequence>
         <xs:element name="storageFile" type="storageFile" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A container for Storage File information</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="storageFile">
      <xs:all>
         <xs:element name="filePath" type="xs:string">
            <xs:annotation>
               <xs:documentation>The fully qualified file path to the data. When Storage Directory is specified, all Storage File paths should start with the
                  Storage Directory path
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="fileSizeBytes" type="xs:long" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The file size in bytes</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="rowCount" type="xs:long" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The number of lines in the file</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="attributes">
      <xs:sequence>
         <xs:element name="attribute" type="attribute" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>An individual piece of metadata associated with the business object data. This can be used to store things such as S3 bucket
                  names, validation flags, and custom user-defined meta-data about this storage.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="attribute">
      <xs:all>
         <xs:element name="name" type="xs:string">
            <xs:annotation>
               <xs:documentation>Attribute key</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="value" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Attribute value</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="businessObjectDataParents">
      <xs:sequence>
         <xs:element name="businessObjectDataKey" type="businessObjectDataKey" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Data</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="businessObjectDataChildren">
      <xs:sequence>
         <xs:element name="businessObjectDataKey" type="businessObjectDataKey" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Data</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="businessObjectDataKey">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Namespace to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the Business Object Definition to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatUsage" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Usage of this Business Object Format - a string describing how this format is used. Often used as a label for the Business
                  Object Format. Does not have to be unique in the system, the Usage string is frequently shared across formats for multiple Business Object
                  Definitions
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatFileType" type="xs:string">
            <xs:annotation>
               <xs:documentation>A File Type known to the system that describes the file type of data stored under a Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <!--
           This is required, but is left as optional here so the auto-generated object becomes "Integer" and not "int".
           That way, JSON objects that deserialize into the auto-generated object don't use the default int value of "0" and instead will leave
           the field as null. The validation that this field is required is handled via the service layer validation.
           -->
         <xs:element name="businessObjectFormatVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The Business Object Format Version for a previously registered Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="partitionValue" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Partition Value that this Business Object Data is associated with</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="subPartitionValues" type="subPartitionValues" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A list of Sub-Partition values this Business Object Data is associated with</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The numeric version of a Business Object Data</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDataKeys" type="businessObjectDataKeys"/>
   <xs:complexType name="businessObjectDataKeys">
      <xs:sequence>
         <xs:element name="businessObjectDataKey" type="businessObjectDataKey" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Data</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="businessObjectDataVersions" type="businessObjectDataVersions"/>
   <xs:complexType name="businessObjectDataVersions">
      <xs:sequence>
         <xs:element name="businessObjectDataVersion" type="businessObjectDataVersion" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A particular version of business object data that is identified by a business object data key</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="businessObjectDataVersion">
      <xs:all>
         <xs:element name="businessObjectDataKey" type="businessObjectDataKey">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="status" type="xs:string">
            <xs:annotation>
               <xs:documentation>The status of the Business Object Data</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDataStatusHistory" type="businessObjectDataStatusHistory"/>
   <xs:complexType name="businessObjectDataStatusHistory">
      <xs:sequence>
         <xs:element name="businessObjectDataStatusChangeEvent" type="businessObjectDataStatusChangeEvent" minOccurs="0"
                     maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="businessObjectDataStatusChangeEvent">
      <xs:sequence>
         <xs:element name="status" type="xs:string">
            <xs:annotation>
               <xs:documentation>The status of the Business Object Data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="eventTime" type="xs:dateTime">
            <xs:annotation>
               <xs:documentation>The timestamp of when the business object data status change occurred</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="userId" type="xs:string">
            <xs:annotation>
               <xs:documentation>The User ID of the user who performed status update or registration of the Business Object Data</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="businessObjectDataSearchKey">
      <xs:all>
         <xs:element name="namespace" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The Namespace to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The name of the Business Object Definition to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatUsage" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The Usage of this Business Object Format - a string describing how this format is used. Often used as a label for the Business
                  Object Format. Does not have to be unique in the system, the Usage string is frequently shared across formats for multiple Business Object
                  Definitions
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatFileType" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A File Type known to the system that describes the file type of data stored under a Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <!--
           This is required, but is left as optional here so the auto-generated object becomes "Integer" and not "int".
           That way, JSON objects that deserialize into the auto-generated object don't use the default int value of "0" and instead will leave
           the field as null. The validation that this field is required is handled via the service layer validation.
           -->
         <xs:element name="businessObjectFormatVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The numeric version of a Business Object Format. Each time a format is registered, the new version will be the previous version
                  + 1
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="partitionValueFilters" type="partitionValueFilters" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A container for Partition Value Filters</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="attributeValueFilters" type="attributeValueFilters" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A container for Attribute Value Filters</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="filterOnLatestValidVersion" type="xs:boolean" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The business object is the latest valid version</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDataSearchFilter" type="businessObjectDataSearchFilter"/>
   <xs:complexType name="businessObjectDataSearchFilter">
      <xs:sequence>
         <xs:element name="businessObjectDataSearchKeys" type="businessObjectDataSearchKeys">
            <xs:annotation>
               <xs:documentation>Values that identify a Business Object Search Keys</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="businessObjectDataSearchKeys">
      <xs:sequence>
         <xs:element name="businessObjectDataSearchKey" type="businessObjectDataSearchKey" minOccurs="1" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Values that identify a Business Object Data Search Key</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="businessObjectDataSearchFilters" type="businessObjectDataSearchFilters"/>
   <xs:complexType name="businessObjectDataSearchFilters">
      <xs:sequence>
         <xs:element name="businessObjectDataSearchFilter" type="businessObjectDataSearchFilter" minOccurs="1" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Values that identify a Business Object Search Filter</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="businessObjectDataSearchRequest" type="businessObjectDataSearchRequest"/>
   <xs:complexType name="businessObjectDataSearchRequest">
      <xs:sequence>
         <xs:element name="businessObjectDataSearchFilters" type="businessObjectDataSearchFilters">
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="businessObjectDataElements" type="businessObjectDataElements"/>
   <xs:complexType name="businessObjectDataElements">
      <xs:sequence>
         <xs:element name="businessObjectData" type="businessObjectData" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Values that identify a Business Object Search Result</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="businessObjectDataSearchResult" type="businessObjectDataSearchResult"/>
   <xs:complexType name="businessObjectDataSearchResult">
      <xs:sequence>
         <xs:element name="businessObjectDataElements" type="businessObjectDataElements">
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <!-- ***** Business Object Data Status ***** -->

   <xs:element name="businessObjectDataStatusInformation" type="businessObjectDataStatusInformation"/>
   <xs:complexType name="businessObjectDataStatusInformation">
      <xs:all>
         <xs:element name="businessObjectDataKey" type="businessObjectDataKey">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="status" type="xs:string">
            <xs:annotation>
               <xs:documentation>The status of the Business Object Data. One of the following values: UPLOADING,VALID, INVALID, ARCHIVED, EXPIRED
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDataStatusUpdateRequest" type="businessObjectDataStatusUpdateRequest"/>
   <xs:complexType name="businessObjectDataStatusUpdateRequest">
      <xs:all>
         <xs:element name="status" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The status of the Business Object Data. One of the following values: UPLOADING,VALID, INVALID, ARCHIVED, EXPIRED
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDataStatusUpdateResponse" type="businessObjectDataStatusUpdateResponse"/>
   <xs:complexType name="businessObjectDataStatusUpdateResponse">
      <xs:all>
         <xs:element name="businessObjectDataKey" type="businessObjectDataKey">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="status" type="xs:string">
            <xs:annotation>
               <xs:documentation>The status of the Business Object Data. One of the following values: UPLOADING,VALID, INVALID, ARCHIVED, EXPIRED
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="previousStatus" type="xs:string">
            <xs:annotation>
               <xs:documentation>The status of the Business Object Data prior to the update</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** Business Object Data Attribute ***** -->

   <xs:element name="businessObjectDataAttributeCreateRequest" type="businessObjectDataAttributeCreateRequest"/>
   <xs:complexType name="businessObjectDataAttributeCreateRequest">
      <xs:all>
         <xs:element name="businessObjectDataAttributeKey" type="businessObjectDataAttributeKey">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Data Attribute</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataAttributeValue" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The value of the Business Object Data Attribute</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDataAttribute" type="businessObjectDataAttribute"/>
   <xs:complexType name="businessObjectDataAttribute">
      <xs:all>
         <xs:element name="id" type="xs:int">
            <xs:annotation>
               <xs:documentation>The internal Id that uniquely references a Business Object Data Attribute</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataAttributeKey" type="businessObjectDataAttributeKey">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Data Attribute</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataAttributeValue" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The value of the Business Object Data Attribute</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDataAttributeUpdateRequest" type="businessObjectDataAttributeUpdateRequest"/>
   <xs:complexType name="businessObjectDataAttributeUpdateRequest">
      <xs:all>
         <xs:element name="businessObjectDataAttributeValue" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The value of the Business Object Data Attribute</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDataAttributeKeys" type="businessObjectDataAttributeKeys"/>
   <xs:complexType name="businessObjectDataAttributeKeys">
      <xs:sequence>
         <xs:element name="businessObjectDataAttributeKey" type="businessObjectDataAttributeKey" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Data Attribute</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="businessObjectDataAttributeKey">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Namespace to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the Business Object Definition to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatUsage" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Usage of a Business Object Format - a string describing how this format is used. Often used as a label for the Business
                  Object Format. Does not have to be unique in the system, the Usage string is frequently shared across formats for multiple Business Object
                  Definitions
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatFileType" type="xs:string">
            <xs:annotation>
               <xs:documentation>A File Type known to the system that describes the file type of data stored under a Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <!--
           This is required, but is left as optional here so the auto-generated object becomes "Integer" and not "int".
           That way, JSON objects that deserialize into the auto-generated object don't use the default int value of "0" and instead will leave
           the field as null. The validation that this field is required is handled via the service layer validation.
           -->
         <xs:element name="businessObjectFormatVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The Business Object Format Version for a previously registered Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="partitionValue" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Partition Value that a Business Object Data is associated with</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="subPartitionValues" type="subPartitionValues" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A list of Sub-Partition values associated with a Business Object Data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The numeric version of a Business Object Data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataAttributeName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of a Business Object Data Attribute</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** Business Object Data Availability ***** -->

   <xs:element name="businessObjectDataAvailabilityRequest" type="businessObjectDataAvailabilityRequest"/>
   <xs:complexType name="businessObjectDataAvailabilityRequest">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Namespace to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the Business Object Definition to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatUsage" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Usage of a Business Object Format - a string describing how this format is used. Often used as a label for the Business
                  Object Format. Does not have to be unique in the system, the Usage string is frequently shared across formats for multiple Business Object
                  Definitions
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatFileType" type="xs:string">
            <xs:annotation>
               <xs:documentation>A File Type known to the system that describes the file type of data stored under a Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The Business Object Format Version for a previously registered Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="partitionValueFilters" type="partitionValueFilters" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A container for Partition Value Filters</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="partitionValueFilter" type="partitionValueFilter" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A container for the Partition Values to check for availability. The request must contain either a single partition value filter
                  or up to 5 partition value filters when passed inside partitionValueFilters container. Only the Partition that is listed in the Business
                  Object Format for this Business Object Data can be specified in a Partition Value Filter
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The numeric version of a Business Object Data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageNames" type="storageNames" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A container for Storage Names to include when checking for Business Object Data availability</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Name of an existing storage known to the System. Required when StorageName is present</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="includeAllRegisteredSubPartitions" type="xs:boolean" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Specifies to perform an exhaustive search to return availability for ALL registered sub-partitions (registered as individual
                  business object data instances) except for the ones with "DELETED" status. This parameter has no impact when business object data version is
                  specified. Default value is false, which means that availability ignores any "not available" registered sub-partitions when it finds at least
                  one "VALID" registered sub-partitions for a requested business object data partition value
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="partitionValueFilters">
      <xs:sequence>
         <xs:element name="partitionValueFilter" type="partitionValueFilter" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A container for the Partition Values to check for availability. The request must contain either a single partition value filter
                  or up to 5 partition value filters when passed inside partitionValueFilters container. Only the Partition that is listed in the Business
                  Object Format for this Business Object Data can be specified in a Partition Value Filter
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="partitionValueFilter">
      <xs:all>
         <xs:element name="partitionKey" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The Partition Key for a Business Object Data. This must be they Partition Key specified in the Business Object Format. Required
                  when partitionValueFilters is present
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="partitionValues" type="partitionValues" minOccurs="0">
            <xs:annotation>
               <xs:documentation>This specifies a list of partition values. Required when partitionValueRange, latestBeforePartitionValue, or
                  latestAfterPartitionValue is not present
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="partitionValueRange" type="partitionValueRange" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A container for the Partition Value Range. A Partition Key Group value is required in the Business Object Format in order to
                  use a Partition Value Range when requesting to check the Business Object Data availability. The Partition Key Group value will be used to
                  identify the ordered set of Expected Partition Values. For more information please see *** LINK Business Object Format Post and *** LINK
                  Expected Partition Values Post. Only a single Partition Value Range is allowed per request. This value is required only when partitionValues,
                  latestBeforePartitionValue, or latestAfterPartitionValue is not present
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="latestBeforePartitionValue" type="latestBeforePartitionValue" minOccurs="0">
            <xs:annotation>
               <xs:documentation>This specifies that the availability request should return the latest Partition Value available before the specified Partition
                  Value. If there is no available partition before the specified value, the response will not include any partitions. When Business Object Data
                  Version is not specified, the Latest Before Partition Value for "VALID" business object data is returned back. This value is only required
                  when partitionValues, partitionValueRange, or latestAfterPartitionValue is not present
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="latestAfterPartitionValue" type="latestAfterPartitionValue" minOccurs="0">
            <xs:annotation>
               <xs:documentation>This specifies that the availability request should return the latest Partition Value available after the specified Partition
                  Value. If there is no available partition after the specified value, the response will not include any partitions. When Business Object Data
                  Version is not specified, the Latest Before Partition Value for "VALID" business object data is returned back. This value is only required
                  when partitionValues, partitionValueRange, or latestAfterPartitionValue is not present
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="partitionValues">
      <xs:sequence>
         <xs:element name="partitionValue" type="xs:string" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>The partition value that the Business Object Data is associated with. Please note that this service supports special token for
                  minimum and maximum partition values - please see *** NEED LINK Partition Value Tokens subsection below
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="partitionValueRange">
      <xs:all>
         <xs:element name="startPartitionValue" type="xs:string">
            <xs:annotation>
               <xs:documentation>The start partition value for the partition value range. Required when partitionValueRange is present</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="endPartitionValue" type="xs:string">
            <xs:annotation>
               <xs:documentation>The end partition value for the partition value range. Required when partitionValueRange is present</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="latestBeforePartitionValue">
      <xs:all>
         <xs:element name="partitionValue" type="xs:string">
            <xs:annotation>
               <xs:documentation>The partition value that is an inclusive upper bound for the latest available partition value. Required when
                  latestBeforePartitionValue is present
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="latestAfterPartitionValue">
      <xs:all>
         <xs:element name="partitionValue" type="xs:string">
            <xs:annotation>
               <xs:documentation>The partition value that is an inclusive lower bound for the latest available partition value. Required when
                  latestAfterPartitionValue is present
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="storageNames">
      <xs:sequence>
         <xs:element name="storageName" type="xs:string" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Name of an existing storage known to the System</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="businessObjectDataAvailability" type="businessObjectDataAvailability"/>
   <xs:complexType name="businessObjectDataAvailability">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Namespace to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the Business Object Definition to which a Business Object Format is related</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatUsage" type="xs:string">
            <xs:annotation>
               <xs:documentation>The Usage of a Business Object Format - a string describing how this format is used. Often used as a label for the Business
                  Object Format. Does not have to be unique in the system, the Usage string is frequently shared across formats for multiple Business Object
                  Definitions
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatFileType" type="xs:string">
            <xs:annotation>
               <xs:documentation>A File Type known to the system that describes the file type of data stored under a Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The Business Object Format Version for a previously registered Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="partitionValueFilters" type="partitionValueFilters" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A container for Partition Value Filters</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="partitionValueFilter" type="partitionValueFilter" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A container for the Partition Values to check for availability. The request must contain either a single partition value filter
                  or up to 5 partition value filters when passed inside partitionValueFilters container. Only the Partition that is listed in the Business
                  Object Format for this Business Object Data can be specified in a Partition Value Filter
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The numeric version of a Business Object Data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageNames" type="storageNames" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A container for Storage Names to include when checking for Business Object Data availability</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Name of an existing storage known to the System. Required when StorageName is present</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="availableStatuses" type="businessObjectDataStatuses" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A container for the Business Object Data in this query that are considered available</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="notAvailableStatuses" type="businessObjectDataStatuses" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A container for the Business Object Data in this query that are not considered available</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="businessObjectDataStatuses">
      <xs:sequence>
         <xs:element name="businessObjectDataStatus" type="businessObjectDataStatus" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A container for the Business Object Data Status information</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="businessObjectDataStatus">
      <xs:all>
         <xs:element name="businessObjectFormatVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The Business Object Format Version for a previously registered Business Object Format</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="partitionValue" type="xs:string">
            <xs:annotation>
               <xs:documentation>The partition value that the Business Object Data is associated with</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="subPartitionValues" type="subPartitionValues" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A list of Sub-Partition values associated with a Business Object Data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The numeric version of a Business Object Data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="reason" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A reason for the Business Object Data not being available (NOT_REGISTERED, INVALID, etc...)</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="attributeValueFilters">
      <xs:sequence>
         <xs:element name="attributeValueFilter" type="attributeValueFilter" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A container for the Attribute Value Filter
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="attributeValueFilter">
      <xs:all>
         <xs:element name="attributeName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The Attribute Name</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="attributeValue" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The Attribute Value</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>


   <!-- ***** Business Object Data Availability Collection ***** -->

   <xs:element name="businessObjectDataAvailabilityCollectionRequest" type="businessObjectDataAvailabilityCollectionRequest"/>
   <xs:complexType name="businessObjectDataAvailabilityCollectionRequest">
      <xs:all>
         <xs:element name="businessObjectDataAvailabilityRequests" type="businessObjectDataAvailabilityRequests">
            <xs:annotation>
               <xs:documentation>A container for multiple availability requests</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="businessObjectDataAvailabilityRequests">
      <xs:sequence>
         <xs:element name="businessObjectDataAvailabilityRequest" type="businessObjectDataAvailabilityRequest" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="businessObjectDataAvailabilityCollectionResponse" type="businessObjectDataAvailabilityCollectionResponse"/>
   <xs:complexType name="businessObjectDataAvailabilityCollectionResponse">
      <xs:all>
         <xs:element name="businessObjectDataAvailabilityResponses" type="businessObjectDataAvailabilityResponses">
            <xs:annotation>
               <xs:documentation>A container for the availability responses</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="isAllDataAvailable" type="xs:boolean">
            <xs:annotation>
               <xs:documentation>Aggregate response indicating if all of the data covered in all requests in the collection is available</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="isAllDataNotAvailable" type="xs:boolean">
            <xs:annotation>
               <xs:documentation>Aggregate response indicating if none of the data covered in any request in the collection is available</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="businessObjectDataAvailabilityResponses">
      <xs:sequence>
         <xs:element name="businessObjectDataAvailability" type="businessObjectDataAvailability" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>The Business Object Data Availability, see *** LINK for details</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <!-- ***** Business Object Data DDL ***** -->

   <xs:element name="businessObjectDataDdlRequest" type="businessObjectDataDdlRequest"/>
   <xs:complexType name="businessObjectDataDdlRequest">
      <xs:all>
         <xs:element name="namespace" type="xs:string"/>
         <xs:element name="businessObjectDefinitionName" type="xs:string"/>
         <xs:element name="businessObjectFormatUsage" type="xs:string"/>
         <xs:element name="businessObjectFormatFileType" type="xs:string"/>
         <xs:element name="businessObjectFormatVersion" type="xs:int" minOccurs="0"/>
         <xs:element name="partitionValueFilters" type="partitionValueFilters" minOccurs="0"/>
         <xs:element name="partitionValueFilter" type="partitionValueFilter" minOccurs="0"/>
         <xs:element name="businessObjectDataVersion" type="xs:int" minOccurs="0"/>
         <xs:element name="storageNames" type="storageNames" minOccurs="0"/>
         <xs:element name="storageName" type="xs:string" minOccurs="0"/>
         <xs:element name="outputFormat" type="businessObjectDataDdlOutputFormatEnum"/>
         <xs:element name="tableName" type="xs:string"/>
         <xs:element name="customDdlName" type="xs:string" minOccurs="0"/>
         <xs:element name="includeDropTableStatement" type="xs:boolean" minOccurs="0"/>
         <xs:element name="includeIfNotExistsOption" type="xs:boolean" minOccurs="0"/>
         <xs:element name="includeDropPartitions" type="xs:boolean" minOccurs="0"/>
         <xs:element name="allowMissingData" type="xs:boolean" minOccurs="0"/>
         <xs:element name="includeAllRegisteredSubPartitions" type="xs:boolean" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Specifies to perform an exhaustive search to return availability for ALL registered sub-partitions (registered as individual
                  business object data instances) except for the ones with "DELETED" status. This parameter has no impact when business object data version is
                  specified. Default value is false, which means that this endpoint ignores any "not available" registered sub-partitions when it finds at least
                  one "VALID" registered sub-partition for a requested business object data partition value.
                  If true, the call would fail with a "Not Found" (status code 404) error when it finds at least one "not available" (except for "DELETED")
                  registered sub-partition for a requested business object data partition value
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="suppressScanForUnregisteredSubPartitions" type="xs:boolean" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Specifies to suppress scanning of registered storage files to discover sub-partitions and instead of that relies on business
                  object data registration information to extract primary and sub-partition (if any) values required to identify Hive table partitions. Default
                  value is false. If true, the call would fail with a "Bad Request" (status code 400) error when number of partitions in any of the discovered
                  business object data instances does not match to the number of partition columns in the business object format being used to generate the DDL
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDataDdl" type="businessObjectDataDdl"/>
   <xs:complexType name="businessObjectDataDdl">
      <xs:all>
         <xs:element name="namespace" type="xs:string"/>
         <xs:element name="businessObjectDefinitionName" type="xs:string"/>
         <xs:element name="businessObjectFormatUsage" type="xs:string"/>
         <xs:element name="businessObjectFormatFileType" type="xs:string"/>
         <xs:element name="businessObjectFormatVersion" type="xs:int" minOccurs="0"/>
         <xs:element name="partitionValueFilters" type="partitionValueFilters" minOccurs="0"/>
         <xs:element name="partitionValueFilter" type="partitionValueFilter" minOccurs="0"/>
         <xs:element name="businessObjectDataVersion" type="xs:int" minOccurs="0"/>
         <xs:element name="storageNames" type="storageNames" minOccurs="0"/>
         <xs:element name="storageName" type="xs:string" minOccurs="0"/>
         <xs:element name="outputFormat" type="businessObjectDataDdlOutputFormatEnum"/>
         <xs:element name="tableName" type="xs:string"/>
         <xs:element name="customDdlName" type="xs:string" minOccurs="0"/>
         <xs:element name="ddl" type="xs:string"/>
      </xs:all>
   </xs:complexType>

   <xs:simpleType name="businessObjectDataDdlOutputFormatEnum">
      <xs:restriction base="xs:string">
         <xs:enumeration value="HIVE_13_DDL"/>
      </xs:restriction>
   </xs:simpleType>

   <!-- ***** Business Object Data DDL Collection ***** -->

   <xs:element name="businessObjectDataDdlCollectionRequest" type="businessObjectDataDdlCollectionRequest"/>
   <xs:complexType name="businessObjectDataDdlCollectionRequest">
      <xs:all>
         <xs:element name="businessObjectDataDdlRequests" type="businessObjectDataDdlRequests"/>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="businessObjectDataDdlRequests">
      <xs:sequence>
         <xs:element name="businessObjectDataDdlRequest" type="businessObjectDataDdlRequest" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="businessObjectDataDdlCollectionResponse" type="businessObjectDataDdlCollectionResponse"/>
   <xs:complexType name="businessObjectDataDdlCollectionResponse">
      <xs:all>
         <xs:element name="businessObjectDataDdlResponses" type="businessObjectDataDdlResponses"/>
         <xs:element name="ddlCollection" type="xs:string"/>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="businessObjectDataDdlResponses">
      <xs:sequence>
         <xs:element name="businessObjectDataDdl" type="businessObjectDataDdl" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <!-- ***** Business Object Data Notification  ***** -->

   <xs:element name="businessObjectDataNotificationRegistrationCreateRequest" type="businessObjectDataNotificationRegistrationCreateRequest"/>
   <xs:complexType name="businessObjectDataNotificationRegistrationCreateRequest">
      <xs:annotation>
         <xs:documentation>The request to create a business object data notification registration</xs:documentation>
      </xs:annotation>
      <xs:all>
         <xs:element name="businessObjectDataNotificationRegistrationKey" type="notificationRegistrationKey">
            <xs:annotation>
               <xs:documentation>A unique identifier for a business object data notification registration</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataEventType" type="xs:string">
            <xs:annotation>
               <xs:documentation>The type of business object data event in which this notification should trigger</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataNotificationFilter" type="businessObjectDataNotificationFilter">
            <xs:annotation>
               <xs:documentation>The filter to use against business object data events. The notification will only trigger for events matching this filter.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="jobActions" type="jobActions">
            <xs:annotation>
               <xs:documentation>The list of jobs to execute when this notification is triggered</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="notificationRegistrationStatus" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The status of the notification registration</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDataNotificationRegistrationUpdateRequest" type="businessObjectDataNotificationRegistrationUpdateRequest"/>
   <xs:complexType name="businessObjectDataNotificationRegistrationUpdateRequest">
      <xs:annotation>
         <xs:documentation>The request to update a business object data notification registration</xs:documentation>
      </xs:annotation>
      <xs:all>
         <xs:element name="businessObjectDataEventType" type="xs:string">
            <xs:annotation>
               <xs:documentation>The type of business object data event in which this notification should trigger</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataNotificationFilter" type="businessObjectDataNotificationFilter">
            <xs:annotation>
               <xs:documentation>The filter to use against business object data events. The notification will only trigger for events matching this filter.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="jobActions" type="jobActions">
            <xs:annotation>
               <xs:documentation>The list of jobs to execute when this notification is triggered</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="notificationRegistrationStatus" type="xs:string">
            <xs:annotation>
               <xs:documentation>The status of the notification registration</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDataNotificationRegistration" type="businessObjectDataNotificationRegistration"/>
   <xs:complexType name="businessObjectDataNotificationRegistration">
      <xs:annotation>
         <xs:documentation>A notification registration for business object data events</xs:documentation>
      </xs:annotation>
      <xs:all>
         <xs:element name="id" type="xs:int">
            <xs:annotation>
               <xs:documentation>A system unique ID of this registration</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataNotificationRegistrationKey" type="notificationRegistrationKey">
            <xs:annotation>
               <xs:documentation>A unique identifier for a business object data notification registration</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataEventType" type="xs:string">
            <xs:annotation>
               <xs:documentation>The type of business object data event in which this notification should trigger</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataNotificationFilter" type="businessObjectDataNotificationFilter">
            <xs:annotation>
               <xs:documentation>The filter to use against business object data events</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="jobActions" type="jobActions">
            <xs:annotation>
               <xs:documentation>The list of jobs to execute when this notification is triggered</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="notificationRegistrationStatus" type="xs:string">
            <xs:annotation>
               <xs:documentation>The status of the notification registration</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="notificationRegistrationStatusUpdateRequest" type="notificationRegistrationStatusUpdateRequest"/>
   <xs:complexType name="notificationRegistrationStatusUpdateRequest">
      <xs:annotation>
         <xs:documentation>The request to update a notification registration status</xs:documentation>
      </xs:annotation>
      <xs:all>
         <xs:element name="notificationRegistrationStatus" type="xs:string">
            <xs:annotation>
               <xs:documentation>The status of the notification registration</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="notificationRegistrationStatusUpdateResponse" type="notificationRegistrationStatusUpdateResponse"/>
   <xs:complexType name="notificationRegistrationStatusUpdateResponse">
      <xs:annotation>
         <xs:documentation>The response to update a notification registration status</xs:documentation>
      </xs:annotation>
      <xs:all>
         <xs:element name="notificationRegistrationKey" type="notificationRegistrationKey">
            <xs:annotation>
               <xs:documentation>A unique identifier for a notification registration</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="notificationRegistrationStatus" type="xs:string">
            <xs:annotation>
               <xs:documentation>The status of the notification registration</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDataNotificationRegistrationKeys" type="businessObjectDataNotificationRegistrationKeys"/>
   <xs:complexType name="businessObjectDataNotificationRegistrationKeys">
      <xs:sequence>
         <xs:element name="businessObjectDataNotificationRegistrationKey" type="notificationRegistrationKey" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notificationRegistrationKey">
      <xs:annotation>
         <xs:documentation>The unique key to a notification registration</xs:documentation>
      </xs:annotation>
      <xs:all>
         <xs:element name="namespace" type="xs:string"/>
         <xs:element name="notificationName" type="xs:string"/>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="businessObjectDataNotificationFilter">
      <xs:annotation>
         <xs:documentation>The filter of business object data notification registration</xs:documentation>
      </xs:annotation>
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The namespace of the business object definition</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The business object definition name</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatUsage" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The business object format usage</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatFileType" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The business object format file type</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The business object format version</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The storage name</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="newBusinessObjectDataStatus" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The new business object data status</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="oldBusinessObjectDataStatus" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The old business object data status</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="jobActions">
      <xs:sequence>
         <xs:element name="jobAction" type="jobAction" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="jobAction">
      <xs:annotation>
         <xs:documentation>A notification action which executes an Activiti job when triggered</xs:documentation>
      </xs:annotation>
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The namespace</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="jobName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The job name</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="correlationData" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The correlation data</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** Storage Unit Notification Registration  ***** -->

   <xs:element name="storageUnitNotificationRegistrationCreateRequest" type="storageUnitNotificationRegistrationCreateRequest"/>
   <xs:complexType name="storageUnitNotificationRegistrationCreateRequest">
      <xs:annotation>
         <xs:documentation>The request to create a storage unit notification registration</xs:documentation>
      </xs:annotation>
      <xs:all>
         <xs:element name="storageUnitNotificationRegistrationKey" type="notificationRegistrationKey">
            <xs:annotation>
               <xs:documentation>A unique identifier for a storage unit notification registration</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageUnitEventType" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  The type of storage unit event in which this notification should trigger. Supported event types: STRGE_UNIT_STTS_CHG
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageUnitNotificationFilter" type="storageUnitNotificationFilter">
            <xs:annotation>
               <xs:documentation>
                  The filter to use against storage unit events. The notification will only trigger for events matching this filter
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="jobActions" type="jobActions">
            <xs:annotation>
               <xs:documentation>The list of jobs to execute when this notification is triggered</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="notificationRegistrationStatus" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The status of the notification registration. One of the following values: ENABLED or DISABLED. Default value is ENABLED
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="storageUnitNotificationRegistrationUpdateRequest" type="storageUnitNotificationRegistrationUpdateRequest"/>
   <xs:complexType name="storageUnitNotificationRegistrationUpdateRequest">
      <xs:annotation>
         <xs:documentation>The request to update a storage unit notification registration</xs:documentation>
      </xs:annotation>
      <xs:all>
         <xs:element name="storageUnitEventType" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  The type of storage unit event in which this notification should trigger. Supported event types: STRGE_UNIT_STTS_CHG
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageUnitNotificationFilter" type="storageUnitNotificationFilter">
            <xs:annotation>
               <xs:documentation>
                  The filter to use against storage unit events. The notification will only trigger for events matching this filter
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="jobActions" type="jobActions">
            <xs:annotation>
               <xs:documentation>The list of jobs to execute when this notification is triggered</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="notificationRegistrationStatus" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  The status of the notification registration. One of the following values: ENABLED or DISABLED
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="storageUnitNotificationRegistration" type="storageUnitNotificationRegistration"/>
   <xs:complexType name="storageUnitNotificationRegistration">
      <xs:annotation>
         <xs:documentation>A notification registration for storage unit events</xs:documentation>
      </xs:annotation>
      <xs:all>
         <xs:element name="id" type="xs:int">
            <xs:annotation>
               <xs:documentation>A system unique ID of this registration</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageUnitNotificationRegistrationKey" type="notificationRegistrationKey">
            <xs:annotation>
               <xs:documentation>A unique identifier for a storage unit notification registration</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageUnitEventType" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  The type of storage unit event in which this notification should trigger. Supported event types: STRGE_UNIT_STTS_CHG
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageUnitNotificationFilter" type="storageUnitNotificationFilter">
            <xs:annotation>
               <xs:documentation>
                  The filter to use against storage unit events. The notification will only trigger for events matching this filter
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="jobActions" type="jobActions">
            <xs:annotation>
               <xs:documentation>The list of jobs to execute when this notification is triggered</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="notificationRegistrationStatus" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  The status of the notification registration. One of the following values: ENABLED or DISABLED
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="storageUnitNotificationRegistrationKeys" type="storageUnitNotificationRegistrationKeys"/>
   <xs:complexType name="storageUnitNotificationRegistrationKeys">
      <xs:sequence>
         <xs:element name="storageUnitNotificationRegistrationKey" type="notificationRegistrationKey" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="storageUnitNotificationFilter">
      <xs:annotation>
         <xs:documentation>The filter of storage unit notification registration</xs:documentation>
      </xs:annotation>
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The namespace of the business object definition</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The business object definition name</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatUsage" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The business object format usage</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatFileType" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The business object format file type</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The business object format version</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The storage name</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="newStorageUnitStatus" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The new storage unit status. One of the following values: ENABLED, DISABLED, ARCHIVING, or RESTORING
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="oldStorageUnitStatus" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The old storage unit status. One of the following values: ENABLED, DISABLED, ARCHIVING, or RESTORING
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** File Upload and Download ***** -->

   <xs:element name="uploadSingleInitiationRequest" type="uploadSingleInitiationRequest"/>
   <xs:complexType name="uploadSingleInitiationRequest">
      <xs:all>
         <xs:element name="sourceBusinessObjectFormatKey" type="businessObjectFormatKey">
            <xs:annotation>
               <xs:documentation>The source business object format key</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="targetBusinessObjectFormatKey" type="businessObjectFormatKey">
            <xs:annotation>
               <xs:documentation>The target business object format key</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataAttributes" type="attributes" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The business object data attributes</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="file" type="file">
            <xs:annotation>
               <xs:documentation>The file to upload</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="targetStorageName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The target storage name to move the encrypted file to</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="uploadSingleInitiationResponse" type="uploadSingleInitiationResponse"/>
   <xs:complexType name="uploadSingleInitiationResponse">
      <xs:all>
         <xs:element name="sourceBusinessObjectData" type="businessObjectData">
            <xs:annotation>
               <xs:documentation>The source business object format key</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="targetBusinessObjectData" type="businessObjectData">
            <xs:annotation>
               <xs:documentation>The target business object format key</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="file" type="file">
            <xs:annotation>
               <xs:documentation>The file to upload</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="uuid" type="xs:string">
            <xs:annotation>
               <xs:documentation>The UUID generated for this upload</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="awsAccessKey" type="xs:string">
            <xs:annotation>
               <xs:documentation>The AWS access key that must be used to upload to this object in S3</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="awsSecretKey" type="xs:string">
            <xs:annotation>
               <xs:documentation>The AWS secret key that must be used to upload to this object in S3</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="awsSessionToken" type="xs:string">
            <xs:annotation>
               <xs:documentation>The AWS session token that must be used to upload to this object in S3</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="awsSessionExpirationTime" type="xs:dateTime">
            <xs:annotation>
               <xs:documentation>The timestamp of when the provided AWS credentials will expire</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="awsKmsKeyId" type="xs:string">
            <xs:annotation>
               <xs:documentation>The KMS key ID that must be used to do SSE</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="targetStorageName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The target storage name</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="file">
      <xs:all>
         <xs:element name="fileName" type="xs:string"/>
         <!--
           This is required, but is left as optional here so the auto-generated object becomes "Long" and not "long".
           That way, JSON objects that deserialize into the auto-generated object don't use the default int value of "0" and instead will leave
           the field as null. The validation that this field is required is handled via the service layer validation.
           -->
         <xs:element name="fileSizeBytes" type="xs:long" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:element name="uploadSingleCredentialExtensionResponse" type="uploadSingleCredentialExtensionResponse"/>
   <xs:complexType name="uploadSingleCredentialExtensionResponse">
      <xs:sequence>
         <xs:element name="awsAccessKey" type="xs:string"/>
         <xs:element name="awsSecretKey" type="xs:string"/>
         <xs:element name="awsSessionToken" type="xs:string"/>
         <xs:element name="awsSessionExpirationTime" type="xs:dateTime"/>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="downloadSingleInitiationResponse" type="downloadSingleInitiationResponse"/>
   <xs:complexType name="downloadSingleInitiationResponse">
      <xs:sequence>
         <xs:element name="businessObjectData" type="businessObjectData"/>
         <xs:element name="awsAccessKey" type="xs:string"/>
         <xs:element name="awsSecretKey" type="xs:string"/>
         <xs:element name="awsSessionToken" type="xs:string"/>
         <xs:element name="awsSessionExpirationTime" type="xs:dateTime"/>
         <xs:element name="preSignedUrl" type="xs:string"/>
      </xs:sequence>
   </xs:complexType>

   <!-- ***** Download Sample Business Data File ***** -->
   <xs:element name="downloadBusinessObjectDefinitionSampleDataFileSingleInitiationResponse"
               type="downloadBusinessObjectDefinitionSampleDataFileSingleInitiationResponse"/>
   <xs:complexType name="downloadBusinessObjectDefinitionSampleDataFileSingleInitiationResponse">
      <xs:sequence>
         <xs:element name="businessObjectDefinitionSampleDataFileKey" type="businessObjectDefinitionSampleDataFileKey"/>
         <xs:element name="awsS3BucketName" type="xs:string"/>
         <xs:element name="awsAccessKey" type="xs:string"/>
         <xs:element name="awsSecretKey" type="xs:string"/>
         <xs:element name="awsSessionToken" type="xs:string"/>
         <xs:element name="awsSessionExpirationTime" type="xs:dateTime"/>
         <xs:element name="preSignedUrl" type="xs:string"/>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="businessObjectDefinitionSampleDataFileKey"
               type="businessObjectDefinitionSampleDataFileKey"/>
   <xs:complexType name="businessObjectDefinitionSampleDataFileKey">
      <xs:sequence>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The namespace of the business object definition
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The business object definition name
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="directoryPath" type="xs:string">
            <xs:annotation>
               <xs:documentation>The directory path of the sample data file. Note
                  that directory path will contain a trailing "directory" separator,
                  thus the caller needs to concatenate the directory path and the
                  file name as is in order to construct a fully qualified path for
                  the sample data file
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="fileName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the sample data file
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="downloadBusinessObjectDefinitionSampleDataFileSingleInitiationRequest"
               type="downloadBusinessObjectDefinitionSampleDataFileSingleInitiationRequest"/>
   <xs:complexType name="downloadBusinessObjectDefinitionSampleDataFileSingleInitiationRequest">
      <xs:sequence>
         <xs:element name="businessObjectDefinitionSampleDataFileKey" type="businessObjectDefinitionSampleDataFileKey"/>
      </xs:sequence>
   </xs:complexType>

   <!-- ***** Business Object Definition Sampe File Upload ***** -->
   <xs:element
      name="uploadBusinessObjectDefinitionSampleDataFileInitiationRequest"
      type="uploadBusinessObjectDefinitionSampleDataFileInitiationRequest"/>
   <xs:complexType
      name="uploadBusinessObjectDefinitionSampleDataFileInitiationRequest">
      <xs:all>
         <xs:element name="businessObjectDefinitionKey" type="businessObjectDefinitionKey"/>
      </xs:all>
   </xs:complexType>

   <xs:element
      name="uploadBusinessObjectDefinitionSampleDataFileInitiationResponse"
      type="uploadBusinessObjectDefinitionSampleDataFileInitiationResponse"/>
   <xs:complexType
      name="uploadBusinessObjectDefinitionSampleDataFileInitiationResponse">
      <xs:all>
         <xs:element name="businessObjectDefinitionKey" type="businessObjectDefinitionKey"/>
         <xs:element name="awsS3BucketName" type="xs:string"/>
         <xs:element name="s3Endpoint" type="xs:string"/>
         <xs:element name="s3KeyPrefix" type="xs:string"/>
         <xs:element name="awsAccessKey" type="xs:string"/>
         <xs:element name="awsSecretKey" type="xs:string"/>
         <xs:element name="awsSessionToken" type="xs:string"/>
         <xs:element name="awsSessionExpirationTime" type="xs:dateTime"/>
      </xs:all>
   </xs:complexType>

   <!-- ***** System Job ***** -->

   <xs:element name="systemJobRunRequest" type="systemJobRunRequest"/>
   <xs:complexType name="systemJobRunRequest">
      <xs:all>
         <xs:element name="jobName" type="xs:string"/>
         <xs:element name="parameters" type="parameters" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:element name="systemJobRunResponse" type="systemJobRunResponse"/>
   <xs:complexType name="systemJobRunResponse">
      <xs:all>
         <xs:element name="jobName" type="xs:string"/>
         <xs:element name="parameters" type="parameters" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <!-- ***** EMR Steps Request Definition ***** -->

   <xs:element name="emrShellStepAddRequest" type="emrShellStepAddRequest"/>
   <xs:complexType name="emrShellStepAddRequest">
      <xs:all>
         <xs:element name="namespace" type="xs:string"/>
         <xs:element name="emrClusterDefinitionName" type="xs:string"/>
         <xs:element name="emrClusterName" type="xs:string"/>
         <xs:element name="stepName" type="xs:string"/>
         <xs:element name="scriptLocation" type="xs:string"/>
         <xs:element name="scriptArguments" type="scriptArguments" minOccurs="0"/>
         <xs:element name="continueOnError" type="xs:boolean" minOccurs="0"/>
         <xs:element name="emrClusterId" type="xs:string" minOccurs="0"/>
         <xs:element name="accountId" type="xs:string" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:element name="emrHiveStepAddRequest" type="emrHiveStepAddRequest"/>
   <xs:complexType name="emrHiveStepAddRequest">
      <xs:all>
         <xs:element name="namespace" type="xs:string"/>
         <xs:element name="emrClusterDefinitionName" type="xs:string"/>
         <xs:element name="emrClusterName" type="xs:string"/>
         <xs:element name="stepName" type="xs:string"/>
         <xs:element name="scriptLocation" type="xs:string"/>
         <xs:element name="scriptArguments" type="scriptArguments" minOccurs="0"/>
         <xs:element name="continueOnError" type="xs:boolean" minOccurs="0"/>
         <xs:element name="emrClusterId" type="xs:string" minOccurs="0"/>
         <xs:element name="accountId" type="xs:string" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:element name="emrPigStepAddRequest" type="emrPigStepAddRequest"/>
   <xs:complexType name="emrPigStepAddRequest">
      <xs:all>
         <xs:element name="namespace" type="xs:string"/>
         <xs:element name="emrClusterDefinitionName" type="xs:string"/>
         <xs:element name="emrClusterName" type="xs:string"/>
         <xs:element name="stepName" type="xs:string"/>
         <xs:element name="scriptLocation" type="xs:string"/>
         <xs:element name="scriptArguments" type="scriptArguments" minOccurs="0"/>
         <xs:element name="continueOnError" type="xs:boolean" minOccurs="0"/>
         <xs:element name="emrClusterId" type="xs:string" minOccurs="0"/>
         <xs:element name="accountId" type="xs:string" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:element name="emrOozieStepAddRequest" type="emrOozieStepAddRequest"/>
   <xs:complexType name="emrOozieStepAddRequest">
      <xs:all>
         <xs:element name="namespace" type="xs:string"/>
         <xs:element name="emrClusterDefinitionName" type="xs:string"/>
         <xs:element name="emrClusterName" type="xs:string"/>
         <xs:element name="stepName" type="xs:string"/>
         <xs:element name="workflowXmlLocation" type="xs:string"/>
         <xs:element name="ooziePropertiesFileLocation" type="xs:string"/>
         <xs:element name="continueOnError" type="xs:boolean" minOccurs="0"/>
         <xs:element name="emrClusterId" type="xs:string" minOccurs="0"/>
         <xs:element name="accountId" type="xs:string" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:element name="emrHadoopJarStepAddRequest" type="emrHadoopJarStepAddRequest"/>
   <xs:complexType name="emrHadoopJarStepAddRequest">
      <xs:all>
         <xs:element name="namespace" type="xs:string"/>
         <xs:element name="emrClusterDefinitionName" type="xs:string"/>
         <xs:element name="emrClusterName" type="xs:string"/>
         <xs:element name="stepName" type="xs:string"/>
         <xs:element name="jarLocation" type="xs:string"/>
         <xs:element name="mainClass" type="xs:string" minOccurs="0"/>
         <xs:element name="scriptArguments" type="scriptArguments" minOccurs="0"/>
         <xs:element name="continueOnError" type="xs:boolean" minOccurs="0"/>
         <xs:element name="emrClusterId" type="xs:string" minOccurs="0"/>
         <xs:element name="accountId" type="xs:string" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="scriptArguments">
      <xs:sequence>
         <xs:element name="argument" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="runOozieWorkflowRequest" type="runOozieWorkflowRequest"/>
   <xs:complexType name="runOozieWorkflowRequest">
      <xs:all>
         <xs:element name="namespace" type="xs:string"/>
         <xs:element name="emrClusterDefinitionName" type="xs:string"/>
         <xs:element name="emrClusterName" type="xs:string"/>
         <xs:element name="workflowLocation" type="xs:string"/>
         <xs:element name="parameters" type="parameters" minOccurs="0"/>
         <xs:element name="emrClusterId" type="xs:string" minOccurs="0"/>
         <xs:element name="accountId" type="xs:string" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <!-- ***** EMR Steps Definition ***** -->

   <xs:element name="emrShellStep" type="emrShellStep"/>
   <xs:complexType name="emrShellStep">
      <xs:all>
         <xs:element name="id" type="xs:string"/>
         <xs:element name="namespace" type="xs:string"/>
         <xs:element name="emrClusterDefinitionName" type="xs:string"/>
         <xs:element name="emrClusterName" type="xs:string"/>
         <xs:element name="stepName" type="xs:string"/>
         <xs:element name="scriptLocation" type="xs:string"/>
         <xs:element name="scriptArguments" type="scriptArguments" minOccurs="0"/>
         <xs:element name="continueOnError" type="xs:boolean" minOccurs="0"/>
         <xs:element name="emrClusterId" type="xs:string" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:element name="emrHiveStep" type="emrHiveStep"/>
   <xs:complexType name="emrHiveStep">
      <xs:all>
         <xs:element name="id" type="xs:string"/>
         <xs:element name="namespace" type="xs:string"/>
         <xs:element name="emrClusterDefinitionName" type="xs:string"/>
         <xs:element name="emrClusterName" type="xs:string"/>
         <xs:element name="stepName" type="xs:string"/>
         <xs:element name="scriptLocation" type="xs:string"/>
         <xs:element name="scriptArguments" type="scriptArguments" minOccurs="0"/>
         <xs:element name="continueOnError" type="xs:boolean" minOccurs="0"/>
         <xs:element name="emrClusterId" type="xs:string" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:element name="emrPigStep" type="emrPigStep"/>
   <xs:complexType name="emrPigStep">
      <xs:all>
         <xs:element name="id" type="xs:string"/>
         <xs:element name="namespace" type="xs:string"/>
         <xs:element name="emrClusterDefinitionName" type="xs:string"/>
         <xs:element name="emrClusterName" type="xs:string"/>
         <xs:element name="stepName" type="xs:string"/>
         <xs:element name="scriptLocation" type="xs:string"/>
         <xs:element name="scriptArguments" type="scriptArguments" minOccurs="0"/>
         <xs:element name="continueOnError" type="xs:boolean" minOccurs="0"/>
         <xs:element name="emrClusterId" type="xs:string" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:element name="emrOozieStep" type="emrOozieStep"/>
   <xs:complexType name="emrOozieStep">
      <xs:all>
         <xs:element name="id" type="xs:string"/>
         <xs:element name="namespace" type="xs:string"/>
         <xs:element name="emrClusterDefinitionName" type="xs:string"/>
         <xs:element name="emrClusterName" type="xs:string"/>
         <xs:element name="stepName" type="xs:string"/>
         <xs:element name="workflowXmlLocation" type="xs:string"/>
         <xs:element name="ooziePropertiesFileLocation" type="xs:string"/>
         <xs:element name="continueOnError" type="xs:boolean" minOccurs="0"/>
         <xs:element name="emrClusterId" type="xs:string" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:element name="emrHadoopJarStep" type="emrHadoopJarStep"/>
   <xs:complexType name="emrHadoopJarStep">
      <xs:all>
         <xs:element name="id" type="xs:string"/>
         <xs:element name="namespace" type="xs:string"/>
         <xs:element name="emrClusterDefinitionName" type="xs:string"/>
         <xs:element name="emrClusterName" type="xs:string"/>
         <xs:element name="stepName" type="xs:string"/>
         <xs:element name="jarLocation" type="xs:string"/>
         <xs:element name="mainClass" type="xs:string" minOccurs="0"/>
         <xs:element name="scriptArguments" type="scriptArguments" minOccurs="0"/>
         <xs:element name="continueOnError" type="xs:boolean" minOccurs="0"/>
         <xs:element name="emrClusterId" type="xs:string" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:element name="oozieWorkflowJob" type="oozieWorkflowJob"/>
   <xs:complexType name="oozieWorkflowJob">
      <xs:all>
         <xs:element name="id" type="xs:string" minOccurs="0"/>
         <xs:element name="namespace" type="xs:string" minOccurs="0"/>
         <xs:element name="emrClusterDefinitionName" type="xs:string" minOccurs="0"/>
         <xs:element name="emrClusterName" type="xs:string" minOccurs="0"/>
         <xs:element name="status" type="xs:string" minOccurs="0"/>
         <xs:element name="errorCode" type="xs:string" minOccurs="0"/>
         <xs:element name="errorMessage" type="xs:string" minOccurs="0"/>
         <xs:element name="startTime" type="xs:dateTime" minOccurs="0"/>
         <xs:element name="endTime" type="xs:dateTime" minOccurs="0"/>
         <xs:element name="workflowActions" type="oozieWorkflowActions" minOccurs="0"/>
         <xs:element name="emrClusterId" type="xs:string" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:element name="oozieWorkflowActions" type="oozieWorkflowActions"/>
   <xs:complexType name="oozieWorkflowActions">
      <xs:sequence>
         <xs:element name="workflowAction" type="oozieWorkflowAction" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="oozieWorkflowAction" type="oozieWorkflowAction"/>
   <xs:complexType name="oozieWorkflowAction">
      <xs:all>
         <xs:element name="id" type="xs:string" minOccurs="0"/>
         <xs:element name="name" type="xs:string" minOccurs="0"/>
         <xs:element name="status" type="xs:string" minOccurs="0"/>
         <xs:element name="startTime" type="xs:dateTime" minOccurs="0"/>
         <xs:element name="endTime" type="xs:dateTime" minOccurs="0"/>
         <xs:element name="errorCode" type="xs:string" minOccurs="0"/>
         <xs:element name="errorMessage" type="xs:string" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <!-- ***** EMR Security Groups Request Definition ***** -->

   <xs:element name="emrMasterSecurityGroupAddRequest" type="emrMasterSecurityGroupAddRequest"/>
   <xs:complexType name="emrMasterSecurityGroupAddRequest">
      <xs:all>
         <xs:element name="namespace" type="xs:string"/>
         <xs:element name="emrClusterDefinitionName" type="xs:string"/>
         <xs:element name="emrClusterName" type="xs:string"/>
         <xs:element name="securityGroupIds" type="securityGroupIds"/>
         <xs:element name="emrClusterId" type="xs:string" minOccurs="0"/>
         <xs:element name="accountId" type="xs:string" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:element name="emrMasterSecurityGroup" type="emrMasterSecurityGroup"/>
   <xs:complexType name="emrMasterSecurityGroup">
      <xs:all>
         <xs:element name="namespace" type="xs:string"/>
         <xs:element name="emrClusterDefinitionName" type="xs:string"/>
         <xs:element name="emrClusterName" type="xs:string"/>
         <xs:element name="securityGroupIds" type="securityGroupIds"/>
         <xs:element name="emrClusterId" type="xs:string" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="securityGroupIds">
      <xs:sequence>
         <xs:element name="securityGroupId" type="xs:string" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <!-- ***** Jobs ***** -->

   <xs:element name="jobDefinitionCreateRequest" type="jobDefinitionCreateRequest"/>
   <xs:complexType name="jobDefinitionCreateRequest">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  The name of a valid namespace known by the system
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="jobName" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  The name of the job definition
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  An optional description of the job definition
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="activitiJobXml" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  Activiti workflow XML related to the job. Id should be named as "{applicationName}.{jobName}". Activiti XML can not contain a CDATA section
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="parameters" type="parameters" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  Default list of key/value pairs that will be made available to the job when it is executed. These values can be overridden by parameters
                  specified during the job execution
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="s3PropertiesLocation" type="s3PropertiesLocation" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The location to the Java properties file in S3
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="jobDefinitionUpdateRequest" type="jobDefinitionUpdateRequest"/>
   <xs:complexType name="jobDefinitionUpdateRequest">
      <xs:all>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  An optional description of the job definition
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="activitiJobXml" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  Activiti workflow XML related to the job. Id should be named as "{applicationName}.{jobName}". Activiti XML can not contain a CDATA section
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="parameters" type="parameters" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  Default list of key/value pairs that will be made available to the job when it is executed. These values can be overridden by parameters
                  specified during the job execution
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="s3PropertiesLocation" type="s3PropertiesLocation" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The location to the Java properties file in S3
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="jobDefinition" type="jobDefinition"/>
   <xs:complexType name="jobDefinition">
      <xs:all>
         <xs:element name="id" type="xs:int">
            <xs:annotation>
               <xs:documentation>
                  The internal identifier that uniquely references a job definition
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  The namespace of the job definition
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="jobName" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  The name of the job definition
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  Description of the job definition
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="activitiJobXml" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  Activiti workflow XML related to the job
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="parameters" type="parameters" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  Default list of key/value pairs that will be made available to the job when it is executed. These values can be overridden by parameters
                  specified during the job execution
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="s3PropertiesLocation" type="s3PropertiesLocation" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The location to the Java properties file in S3
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="lastUpdatedByUserId" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The user ID under whose authorization context the workflow runs</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="jobCreateRequest" type="jobCreateRequest"/>
   <xs:complexType name="jobCreateRequest">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The namespace of the job</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="jobName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the job</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="parameters" type="parameters" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  List of key/value pairs that will be made available to the job when it is executed. These parameters will override any parameters defined as
                  part of the job definition
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="s3PropertiesLocation" type="s3PropertiesLocation" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The location to the Java properties file in S3</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="jobUpdateRequest" type="jobUpdateRequest"/>
   <xs:complexType name="jobUpdateRequest">
      <xs:all>
         <xs:element name="action" type="jobActionEnum">
            <xs:annotation>
               <xs:documentation>
                  The action to take for the job. One of the following values: SUSPEND, RESUME
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="job" type="job"/>
   <xs:complexType name="job">
      <xs:all>
         <xs:element name="id" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  The internal identifier that uniquely references a job
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="status" type="jobStatusEnum" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The status of the job. One of the following values: RUNNING, SUSPENDED, COMPLETED
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="namespace" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The namespace of the job</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="jobName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The name of the job</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="startTime" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The start time of the job
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="endTime" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The end time of the job. It is not returned for a job in RUNNING state
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="currentWorkflowStep" type="workflowStep" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The step where the workflow currently is. It is returned for a job in RUNNING state
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="completedWorkflowSteps" type="workflowSteps" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The steps that have been completed. For a job in RUNNING state, steps up to the last Async task will be returned. For a job in
                  COMPLETED state, all executed steps will be returned
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="parameters" type="parameters" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  Current workflow variables and values
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="activitiJobXml" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  Activiti workflow XML related to the job
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="workflowErrors" type="workflowErrors" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The workflow errors
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="deleteReason" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  A reason this job has been deleted. It is returned if the job has been deleted
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="parameters">
      <xs:sequence>
         <xs:element name="parameter" type="parameter" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>
                  An individual parameter (a key/value pair)
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="parameter">
      <xs:all>
         <xs:element name="name" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  Name of the parameter
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="value" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  Value of the parameter. If the name of the parameter contains the word "password," this value will be masked before being logged into the
                  application logs
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="workflowSteps">
      <xs:sequence>
         <xs:element name="workflowStep" type="workflowStep" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>
                  An individual step of the job
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="workflowStep">
      <xs:all>
         <xs:element name="id" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  The internal identifier that uniquely references a step
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="name" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The name of the step
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="startTime" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The start time of the step
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="endTime" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The end time of the step
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="workflowErrors">
      <xs:sequence>
         <xs:element name="workflowError" type="workflowError" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>
                  An individual workflow error
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="workflowError">
      <xs:all>
         <xs:element name="errorMessage" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  Error message
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="retriesLeft" type="xs:int">
            <xs:annotation>
               <xs:documentation>
                  Number of retries left
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="errorStackTrace" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The error stack trace
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:simpleType name="jobStatusEnum">
      <xs:restriction base="xs:string">
         <xs:enumeration value="RUNNING"/>
         <xs:enumeration value="SUSPENDED"/>
         <xs:enumeration value="COMPLETED"/>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="jobActionEnum">
      <xs:restriction base="xs:string">
         <xs:enumeration value="SUSPEND"/>
         <xs:enumeration value="RESUME"/>
      </xs:restriction>
   </xs:simpleType>

   <xs:element name="jobSummaries" type="jobSummaries"/>
   <xs:complexType name="jobSummaries">
      <xs:sequence>
         <xs:element name="jobSummary" type="jobSummary" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>
                  An individual job summary
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="jobSummary">
      <xs:all>
         <xs:element name="id" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  The job id that uniquely identifies the previously submitted job
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <!--
           Although namespace should typically be present, we are leaving it as optional
           in case somebody runs an Activiti job outside of the herd infrastructure.
         -->
         <xs:element name="namespace" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The namespace of the job
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="jobName" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  The name of the job
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="startTime" type="xs:dateTime">
            <xs:annotation>
               <xs:documentation>
                  The start time of the job
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="endTime" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The end time of the job. It is not returned for a job in RUNNING state
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="status" type="jobStatusEnum" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The status of the job. One of the following values: RUNNING, COMPLETED
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="totalExceptions" type="xs:long">
            <xs:annotation>
               <xs:documentation>
                  The number of exceptions
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="jobSignalRequest" type="jobSignalRequest"/>
   <xs:complexType name="jobSignalRequest">
      <xs:all>
         <xs:element name="id" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  The job id that uniquely identifies the previously submitted job
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="receiveTaskId" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  The task Id of the receive task in the job workflow to signal. The job must be waiting on this task at the time of this call
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="parameters" type="parameters" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  List of key/value pairs that will be made available to the job
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="s3PropertiesLocation" type="s3PropertiesLocation" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The location to the Java properties file in S3
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** EMR Cluster Definition ***** -->

   <xs:element name="emrClusterDefinitionCreateRequest" type="emrClusterDefinitionCreateRequest"/>
   <xs:complexType name="emrClusterDefinitionCreateRequest">
      <xs:all>
         <xs:element name="emrClusterDefinitionKey" type="emrClusterDefinitionKey"/>
         <xs:element name="emrClusterDefinition" type="emrClusterDefinition"/>
      </xs:all>
   </xs:complexType>

   <xs:element name="emrClusterDefinitionInformation" type="emrClusterDefinitionInformation"/>
   <xs:complexType name="emrClusterDefinitionInformation">
      <xs:all>
         <xs:element name="id" type="xs:int"/>
         <xs:element name="emrClusterDefinitionKey" type="emrClusterDefinitionKey"/>
         <xs:element name="emrClusterDefinition" type="emrClusterDefinition"/>
      </xs:all>
   </xs:complexType>

   <xs:element name="emrClusterDefinitionUpdateRequest" type="emrClusterDefinitionUpdateRequest"/>
   <xs:complexType name="emrClusterDefinitionUpdateRequest">
      <xs:all>
         <xs:element name="emrClusterDefinition" type="emrClusterDefinition"/>
      </xs:all>
   </xs:complexType>

   <xs:element name="emrClusterDefinitionKeys" type="emrClusterDefinitionKeys"/>
   <xs:complexType name="emrClusterDefinitionKeys">
      <xs:sequence>
         <xs:element name="emrClusterDefinitionKey" type="emrClusterDefinitionKey" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify an EMR Cluster Definition</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="emrClusterDefinitionKey">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The namespace of the EMR cluster definition</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="emrClusterDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the EMR cluster definition</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="emrClusterDefinition" type="emrClusterDefinition"/>
   <xs:complexType name="emrClusterDefinition">
      <xs:all>
         <xs:element name="sshKeyPairName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The name of the Amazon EC2 key pair to set as the connection credential</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="subnetId" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>&lt;p&gt;A comma separated list of Amazon VPC subnets.&lt;/p&gt;
                  &lt;ul&gt;
                  &lt;li&gt;When multiple subnets are specified, the subnet in the AZ with the best price will be used.&lt;/li&gt;
                  &lt;li&gt;When multiple subnets belong to the same AZ, the subnet with the largest amount of available IP's will be used.&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;p&gt;Cross-VPC access in PROD will only accept internal/emr subnets at this time.&lt;/p&gt;</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="logBucket" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Amazon S3 bucket to receive log files</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="keepAlive" type="xs:boolean" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Launch a cluster that continues running even after completing all its steps</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="visibleToAll" type="xs:boolean" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Makes the instances in an existing cluster visible to all IAM users</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="terminationProtection" type="xs:boolean" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Launch the cluster with termination protection enabled</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="encryptionEnabled" type="xs:boolean" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Volume level encryption for the disks (using custom scripts). Encryption is not supported for AMI versions lower than
                  3.1.0
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="accountId" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The AWS account number, without dashes, to launch the Amazon EMR service in</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="serviceIamRole" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Launches the Amazon EMR service with the specified IAM role</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="ec2NodeIamProfileName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Launches the EC2 instances of a cluster with the specified IAM role</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="amiVersion" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Specify the version of the AMI to use</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="releaseLabel" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The release label. Available from 4.x</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="hadoopVersion" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Specify the version of Hadoop to install</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="hiveVersion" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The Hive version to load</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="pigVersion" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The Pig version to load</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="installOozie" type="xs:boolean" minOccurs="0"/>
         <xs:element name="customBootstrapActionMaster" type="scriptDefinitions" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Bootstrapping scripts that are executed only on the Master node</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="customBootstrapActionAll" type="scriptDefinitions" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Bootstrapping scripts that are executed on all the nodes</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="additionalInfo" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Specifies additional information during cluster creation</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="instanceDefinitions" type="instanceDefinitions" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Instance Group Definitions</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="nodeTags" type="nodeTags" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Custom tags to be applied on the EC2 nodes</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="supportedProduct" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Installs third-party software on an Amazon EMR cluster</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="applications" type="emrClusterDefinitionApplications" minOccurs="0">
            <xs:annotation>
               <xs:documentation>List of applications</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="configurations" type="emrClusterDefinitionConfigurations" minOccurs="0">
            <xs:annotation>
               <xs:documentation>List of configurations</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="daemonConfigurations" type="daemonConfigurations" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Predefined bootstrap action to configure hadoop daemons</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="hadoopConfigurations" type="hadoopConfigurations" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Predefined bootstrap action to specify hadoop configurations</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="hadoopJarSteps" type="hadoopJarSteps" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Hadoop jar steps that are added, to be executed once the cluster is started</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="additionalMasterSecurityGroups" type="additionalMasterSecurityGroups" minOccurs="0">
            <xs:annotation>
               <xs:documentation>List of additional master node security groups. The security group defined by the configuration value
                  emr.herd.support.security.group will automatically be added whether this list is specified or not
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="additionalSlaveSecurityGroups" type="additionalSlaveSecurityGroups" minOccurs="0">
            <xs:annotation>
               <xs:documentation>List of additional slave node security groups</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="securityConfiguration" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The name of a security configuration to apply to the cluster</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="additionalMasterSecurityGroups">
      <xs:sequence>
         <xs:element name="additionalMasterSecurityGroup" type="xs:string" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Master node security group</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="additionalSlaveSecurityGroups">
      <xs:sequence>
         <xs:element name="additionalSlaveSecurityGroup" type="xs:string" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Slave node security group</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="emrClusterDefinitionConfigurations">
      <xs:sequence>
         <xs:element name="configuration" type="emrClusterDefinitionConfiguration" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A configuration</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="emrClusterDefinitionConfiguration">
      <xs:sequence>
         <xs:element name="classification" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The configuration classification</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="configurations" type="emrClusterDefinitionConfigurations" minOccurs="0">
            <xs:annotation>
               <xs:documentation>List of configurations</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="properties" type="emrClusterDefinitionConfigurationProperties" minOccurs="0">
            <xs:annotation>
               <xs:documentation>List of properties</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="emrClusterDefinitionConfigurationProperties">
      <xs:sequence>
         <xs:element name="property" type="parameter" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A property</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="emrClusterDefinitionApplications">
      <xs:sequence>
         <xs:element name="application" type="emrClusterDefinitionApplication" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>An application</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="emrClusterDefinitionApplication">
      <xs:sequence>
         <xs:element name="name" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Application name</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="version" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Application version</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="args" type="emrClusterDefinitionApplicationArguments" minOccurs="0">
            <xs:annotation>
               <xs:documentation>List of arguments</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="additionalInfoList" type="emrClusterDefinitionApplicationAdditionalInfoList" minOccurs="0">
            <xs:annotation>
               <xs:documentation>List of additional info</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="emrClusterDefinitionApplicationArguments">
      <xs:sequence>
         <xs:element name="arg" type="xs:string" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>An argument</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="emrClusterDefinitionApplicationAdditionalInfoList">
      <xs:sequence>
         <xs:element name="additionalInfo" type="parameter" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>An additional info</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="hadoopJarSteps">
      <xs:sequence>
         <xs:element name="hadoopJarStep" type="hadoopJarStep" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="hadoopJarStep">
      <xs:all>
         <xs:element name="stepName" type="xs:string"/>
         <xs:element name="jarLocation" type="xs:string"/>
         <xs:element name="mainClass" type="xs:string" minOccurs="0"/>
         <xs:element name="scriptArguments" type="scriptArguments" minOccurs="0"/>
         <xs:element name="continueOnError" type="xs:boolean" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="scriptDefinitions">
      <xs:sequence>
         <xs:element name="scriptDefinition" type="scriptDefinition" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="scriptDefinition">
      <xs:all>
         <xs:element name="scriptName" type="xs:string"/>
         <xs:element name="scriptLocation" type="xs:string"/>
         <xs:element name="scriptArguments" type="scriptArguments" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="instanceDefinitions">
      <xs:all>
         <xs:element name="masterInstances" type="masterInstanceDefinition" minOccurs="0"/>
         <xs:element name="coreInstances" type="instanceDefinition" minOccurs="0"/>
         <xs:element name="taskInstances" type="instanceDefinition" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="masterInstanceDefinition">
      <xs:all>
         <xs:element name="instanceCount" type="xs:int"/>
         <xs:element name="instanceType" type="xs:string"/>
         <xs:element name="instanceSpotPrice" type="xs:decimal" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The instance bid price, in USD. If not specified, uses on-demand</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="instanceMaxSearchPrice" type="xs:decimal" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The maximum amount, in USD, to search for the best price. The best price search will only search for prices lower than this
                  value. If a spot instance is selected by the search, this value will be the bid price
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="instanceOnDemandThreshold" type="xs:decimal" minOccurs="0">
            <xs:annotation>
               <xs:documentation>&lt;p&gt;The amount, in USD, you are willing to pay over the lowest spot price for an on-demand instance. Use this to
                  dynamically balance the cost vs. stability of your instances.&lt;/p&gt;
                  &lt;p&gt;If not specified, the search will not attempt to find an on-demand instance when a spot is found. This is the same behavior as when
                  this parameter is set to $0.&lt;/p&gt;</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="instanceDefinition">
      <xs:all>
         <xs:element name="instanceCount" type="xs:int"/>
         <xs:element name="instanceType" type="xs:string"/>
         <xs:element name="instanceSpotPrice" type="xs:decimal" minOccurs="0"/>
         <xs:element name="instanceMaxSearchPrice" type="xs:decimal" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The maximum amount, in USD, to search for the best price. The best price search will only search for prices lower than this
                  value. If a spot instance is selected by the search, this value will be the bid price.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="instanceOnDemandThreshold" type="xs:decimal" minOccurs="0">
            <xs:annotation>
               <xs:documentation>&lt;p&gt;The amount, in USD, you are willing to pay over the lowest spot price for an on-demand instance. Use this to
                  dynamically balance the cost vs. stability of your instances.&lt;/p&gt;
                  &lt;p&gt;If not specified, the search will not attempt to find an on-demand instance when a spot is found. This is the same behavior as when
                  this parameter is set to $0.&lt;/p&gt;</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="nodeTags">
      <xs:sequence>
         <xs:element name="nodeTag" type="nodeTag" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="nodeTag">
      <xs:all>
         <xs:element name="tagName" type="xs:string"/>
         <xs:element name="tagValue" type="xs:string"/>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="daemonConfigurations">
      <xs:sequence>
         <xs:element name="daemonParam" type="parameter" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="hadoopConfigurations">
      <xs:choice minOccurs="0" maxOccurs="2">
         <xs:element name="configurationFiles" type="configurationFiles" minOccurs="0"/>
         <xs:element name="keyValuePairConfigurations" type="keyValuePairConfigurations" minOccurs="0"/>
      </xs:choice>
   </xs:complexType>

   <xs:complexType name="configurationFiles">
      <xs:sequence>
         <xs:element name="configurationFile" type="configurationFile" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="configurationFile">
      <xs:all>
         <xs:element name="fileNameShortcut" type="xs:string"/>
         <xs:element name="configFileLocation" type="xs:string"/>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="keyValuePairConfigurations">
      <xs:sequence>
         <xs:element name="keyValuePairConfiguration" type="keyValuePairConfiguration" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="keyValuePairConfiguration">
      <xs:all>
         <xs:element name="keyValueShortcut" type="xs:string"/>
         <xs:element name="attribKey" type="xs:string"/>
         <xs:element name="attribVal" type="xs:string"/>
      </xs:all>
   </xs:complexType>

   <!-- ***** EMR Create Cluster ***** -->

   <xs:element name="emrClusterCreateRequest" type="emrClusterCreateRequest"/>
   <xs:complexType name="emrClusterCreateRequest">
      <xs:all>
         <xs:element name="namespace" type="xs:string"/>
         <xs:element name="emrClusterDefinitionName" type="xs:string"/>
         <xs:element name="emrClusterName" type="xs:string"/>
         <xs:element name="dryRun" type="xs:boolean" minOccurs="0"/>
         <xs:element name="emrClusterDefinitionOverride" type="emrClusterDefinition" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:element name="emrCluster" type="emrCluster"/>
   <xs:complexType name="emrCluster">
      <xs:all>
         <xs:element name="id" type="xs:string" minOccurs="0"/>
         <xs:element name="status" type="xs:string" minOccurs="0"/>
         <xs:element name="statusChangeReason" type="statusChangeReason" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The reason for the cluster status change.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="statusTimeline" type="statusTimeline" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  A timeline that represents the status of a cluster over the lifetime of the cluster.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="namespace" type="xs:string"/>
         <xs:element name="emrClusterDefinitionName" type="xs:string"/>
         <xs:element name="emrClusterName" type="xs:string"/>
         <xs:element name="accountId" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The AWS account number, without dashes, where Amazon EMR service is running in</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="activeStep" type="emrStep" minOccurs="0"/>
         <xs:element name="step" type="emrStep" minOccurs="0"/>
         <xs:element name="oozieWorkflowJobs" type="oozieWorkflowJobs" minOccurs="0"/>
         <xs:element name="dryRun" type="xs:boolean" minOccurs="0"/>
         <xs:element name="emrClusterCreated" type="xs:boolean" minOccurs="0"/>
         <xs:element name="emrClusterDefinition" type="emrClusterDefinition" minOccurs="0"/>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="statusChangeReason">
      <xs:all>
         <xs:element name="code" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The programmatic code for the state change reason.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="message" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The descriptive message for the state change reason.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="statusTimeline">
      <xs:all>
         <xs:element name="creationTime" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The creation date and time of the cluster.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="readyTime" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The date and time when the cluster was ready to execute steps.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="endTime" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The date and time when the cluster was terminated.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="emrStep">
      <xs:all>
         <xs:element name="id" type="xs:string"/>
         <xs:element name="stepName" type="xs:string"/>
         <xs:element name="jarLocation" type="xs:string" minOccurs="0"/>
         <xs:element name="mainClass" type="xs:string" minOccurs="0"/>
         <xs:element name="scriptArguments" type="scriptArguments" minOccurs="0"/>
         <xs:element name="continueOnError" type="xs:string" minOccurs="0"/>
         <xs:element name="status" type="xs:string"/>
      </xs:all>
   </xs:complexType>

   <xs:element name="oozieWorkflowJobs" type="oozieWorkflowJobs"/>
   <xs:complexType name="oozieWorkflowJobs">
      <xs:sequence>
         <xs:element name="workflowJob" type="oozieWorkflowJob" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <!-- ***** Business Object Data Storage File ***** -->

   <xs:element name="businessObjectDataStorageFilesCreateRequest" type="businessObjectDataStorageFilesCreateRequest"/>
   <xs:complexType name="businessObjectDataStorageFilesCreateRequest">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The namespace of the business object data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The definition name of the business object data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatUsage" type="xs:string">
            <xs:annotation>
               <xs:documentation>The format usage of the business object data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatFileType" type="xs:string">
            <xs:annotation>
               <xs:documentation>The format file type of the business object data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <!--
           The "version" fields below are required, but they are left as optional here so the auto-generated object becomes "Integer" and not "int".
           That way, JSON objects that deserialize into the auto-generated object don't use the default int value of "0" and instead will leave
           the field as null. The validation that this field is required is handled via the service layer validation.
           -->
         <xs:element name="businessObjectFormatVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The format version of the business object data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="partitionValue" type="xs:string">
            <xs:annotation>
               <xs:documentation>The the primary partition value of the business object data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="subPartitionValues" type="subPartitionValues" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The subpartition values of the business object data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The version of the business object data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the storage
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageFiles" type="storageFiles" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The list of storage files to be added. Storage files are required, unless discovery of storage files is enabled. In that case, the storage
                  files are not allowed to be specified
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="discoverStorageFiles" type="xs:boolean" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  If true, enables the auto-discovery of all storage files in the relative S3 storage under the relative storage directory
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDataStorageFilesCreateResponse" type="businessObjectDataStorageFilesCreateResponse"/>
   <xs:complexType name="businessObjectDataStorageFilesCreateResponse">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The namespace of the business object data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The definition name of the business object data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatUsage" type="xs:string">
            <xs:annotation>
               <xs:documentation>The format usage of the business object data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatFileType" type="xs:string">
            <xs:annotation>
               <xs:documentation>The format file type of the business object data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <!--
           The "version" fields below are required, but they are left as optional here so the auto-generated object becomes "Integer" and not "int".
           That way, JSON objects that deserialize into the auto-generated object don't use the default int value of "0" and instead will leave
           the field as null. The validation that this field is required is handled via the service layer validation.
           -->
         <xs:element name="businessObjectFormatVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The format version of the business object data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="partitionValue" type="xs:string">
            <xs:annotation>
               <xs:documentation>The the primary partition value of the business object data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="subPartitionValues" type="subPartitionValues" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The subpartition values of the business object data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDataVersion" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The version of the business object data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the storage
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageFiles" type="storageFiles">
            <xs:annotation>
               <xs:documentation>The list of storage files</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** JDBC ***** -->

   <xs:element name="jdbcExecutionRequest" type="jdbcExecutionRequest"/>
   <xs:complexType name="jdbcExecutionRequest">
      <xs:sequence>
         <xs:element name="connection" type="jdbcConnection"/>
         <xs:element name="statements">
            <xs:complexType>
               <xs:sequence>
                  <xs:element name="statement" type="jdbcStatement" maxOccurs="unbounded"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="s3PropertiesLocation" type="s3PropertiesLocation" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="s3PropertiesLocation">
      <xs:sequence>
         <xs:element name="bucketName" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  The S3 bucket name
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="key" type="xs:string">
            <xs:annotation>
               <xs:documentation>
                  The S3 object key
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="jdbcConnection">
      <xs:sequence>
         <xs:element name="url" type="xs:string"/>
         <xs:element name="username" type="xs:string"/>
         <xs:element name="password" type="xs:string"/>
         <xs:element name="databaseType" type="jdbcDatabaseType"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="jdbcStatement">
      <xs:sequence>
         <xs:element name="type" type="jdbcStatementType"/>
         <xs:element name="sql" type="xs:string"/>
         <xs:element name="continueOnError" type="xs:boolean" minOccurs="0"/>
         <xs:element name="status" type="jdbcStatementStatus" minOccurs="0"/>
         <xs:element name="result" type="xs:string" minOccurs="0"/>
         <xs:element name="resultSet" type="jdbcStatementResultSet" minOccurs="0"/>
         <xs:element name="errorMessage" type="xs:string" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="jdbcStatementResultSet">
      <xs:sequence>
         <xs:element name="columnNames" type="jdbcStatementResultSetColumnNames" minOccurs="0"/>
         <xs:element name="rows" type="jdbcStatementResultSetRows" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="jdbcStatementResultSetColumnNames">
      <xs:sequence>
         <xs:element name="columnName" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="jdbcStatementResultSetRows">
      <xs:sequence>
         <xs:element name="row" type="jdbcStatementResultSetRow" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="jdbcStatementResultSetRow">
      <xs:sequence>
         <xs:element name="column" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="jdbcExecutionResponse" type="jdbcExecutionResponse"/>
   <xs:complexType name="jdbcExecutionResponse">
      <xs:sequence>
         <xs:element name="connection" type="jdbcConnection"/>
         <xs:element name="statements">
            <xs:complexType>
               <xs:sequence>
                  <xs:element name="statement" type="jdbcStatement" maxOccurs="unbounded"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:simpleType name="jdbcStatementType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="UPDATE"/>
         <xs:enumeration value="QUERY"/>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="jdbcStatementStatus">
      <xs:restriction base="xs:string">
         <xs:enumeration value="SUCCESS"/>
         <xs:enumeration value="ERROR"/>
         <xs:enumeration value="SKIPPED"/>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="jdbcDatabaseType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="ORACLE"/>
         <xs:enumeration value="POSTGRES"/>
         <xs:enumeration value="REDSHIFT"/>
         <xs:enumeration value="MYSQL"/>
      </xs:restriction>
   </xs:simpleType>

   <!-- ***** Business Object Data Invalidation ***** -->

   <xs:element name="businessObjectDataInvalidateUnregisteredRequest" type="businessObjectDataInvalidateUnregisteredRequest"/>
   <xs:complexType name="businessObjectDataInvalidateUnregisteredRequest">
      <xs:sequence>
         <xs:element name="namespace" type="xs:string"/>
         <xs:element name="businessObjectDefinitionName" type="xs:string"/>
         <xs:element name="businessObjectFormatUsage" type="xs:string"/>
         <xs:element name="businessObjectFormatFileType" type="xs:string"/>
         <!--
           The "version" fields below are required, but they are left as optional here so the auto-generated object becomes "Integer" and not "int".
           That way, JSON objects that deserialize into the auto-generated object don't use the default int value of "0" and instead will leave
           the relative field as null. The validation that the field is required is handled via the service layer validation.
           -->
         <xs:element name="businessObjectFormatVersion" type="xs:int" minOccurs="0"/>
         <xs:element name="partitionValue" type="xs:string"/>
         <xs:element name="subPartitionValues" type="subPartitionValues" minOccurs="0"/>
         <xs:element name="storageName" type="xs:string"/>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="businessObjectDataInvalidateUnregisteredResponse" type="businessObjectDataInvalidateUnregisteredResponse"/>
   <xs:complexType name="businessObjectDataInvalidateUnregisteredResponse">
      <xs:sequence>
         <xs:element name="namespace" type="xs:string"/>
         <xs:element name="businessObjectDefinitionName" type="xs:string"/>
         <xs:element name="businessObjectFormatUsage" type="xs:string"/>
         <xs:element name="businessObjectFormatFileType" type="xs:string"/>
         <!--
           The "version" fields below are required, but they are left as optional here so the auto-generated object becomes "Integer" and not "int".
           That way, JSON objects that deserialize into the auto-generated object don't use the default int value of "0" and instead will leave
           the relative field as null. The validation that the field is required is handled via the service layer validation.
           -->
         <xs:element name="businessObjectFormatVersion" type="xs:int" minOccurs="0"/>
         <xs:element name="partitionValue" type="xs:string"/>
         <xs:element name="subPartitionValues" type="subPartitionValues" minOccurs="0"/>
         <xs:element name="storageName" type="xs:string"/>
         <xs:element name="registeredBusinessObjectDataList" type="businessObjectDataList" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="businessObjectDataList">
      <xs:sequence>
         <xs:element ref="businessObjectData" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="jobDeleteRequest" type="jobDeleteRequest"/>
   <xs:complexType name="jobDeleteRequest">
      <xs:sequence>
         <xs:element name="deleteReason" type="xs:string" minOccurs="1"/>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="storageUnitUploadCredential" type="storageUnitUploadCredential"/>
   <xs:complexType name="storageUnitUploadCredential">
      <xs:sequence>
         <xs:element name="awsCredential" type="awsCredential">
            <xs:annotation>
               <xs:documentation>The AWS session credential</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="awsKmsKeyId" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The AWS KMS key ID that must be used to upload, if applicable</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="storageUnitDownloadCredential" type="storageUnitDownloadCredential"/>
   <xs:complexType name="storageUnitDownloadCredential">
      <xs:sequence>
         <xs:element name="awsCredential" type="awsCredential">
            <xs:annotation>
               <xs:documentation>The AWS session credential</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="businessObjectDataUploadCredential" type="businessObjectDataUploadCredential"/>
   <xs:complexType name="businessObjectDataUploadCredential">
      <xs:sequence>
         <xs:element name="awsCredential" type="awsCredential">
            <xs:annotation>
               <xs:documentation>The AWS session credential</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="awsKmsKeyId" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The AWS KMS key ID that must be used to upload, if applicable</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="businessObjectDataDownloadCredential" type="businessObjectDataDownloadCredential"/>
   <xs:complexType name="businessObjectDataDownloadCredential">
      <xs:sequence>
         <xs:element name="awsCredential" type="awsCredential">
            <xs:annotation>
               <xs:documentation>The AWS session credential</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="awsCredential">
      <xs:sequence>
         <xs:element name="awsAccessKey" type="xs:string">
            <xs:annotation>
               <xs:documentation>The temporary AWS access key</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="awsSecretKey" type="xs:string">
            <xs:annotation>
               <xs:documentation>The temporary AWS secret key</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="awsSessionToken" type="xs:string">
            <xs:annotation>
               <xs:documentation>The temporary AWS session token</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="awsSessionExpirationTime" type="xs:dateTime">
            <xs:annotation>
               <xs:documentation>The temporary AWS credential expiration time</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <!-- ***** Storage Policy ***** -->

   <xs:element name="storagePolicyCreateRequest" type="storagePolicyCreateRequest"/>
   <xs:complexType name="storagePolicyCreateRequest">
      <xs:all>
         <xs:element name="storagePolicyKey" type="storagePolicyKey">
            <xs:annotation>
               <xs:documentation>Wrapper for the storage policy unique identifiers</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storagePolicyRule" type="storagePolicyRule">
            <xs:annotation>
               <xs:documentation>Wrapper for the storage policy rule</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storagePolicyFilter" type="storagePolicyFilter">
            <xs:annotation>
               <xs:documentation>The storage policy filter to be used to select business object data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storagePolicyTransition" type="storagePolicyTransition">
            <xs:annotation>
               <xs:documentation>The storage policy transition</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="status" type="xs:string">
            <xs:annotation>
               <xs:documentation>The status of the storage policy. Supported values are: ENABLED, DISABLED</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="storagePolicyUpdateRequest" type="storagePolicyUpdateRequest"/>
   <xs:complexType name="storagePolicyUpdateRequest">
      <xs:all>
         <xs:element name="storagePolicyRule" type="storagePolicyRule">
            <xs:annotation>
               <xs:documentation>Wrapper for the storage policy rule</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storagePolicyFilter" type="storagePolicyFilter">
            <xs:annotation>
               <xs:documentation>The storage policy filter to be used to select business object data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storagePolicyTransition" type="storagePolicyTransition">
            <xs:annotation>
               <xs:documentation>The storage policy transition</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="status" type="xs:string">
            <xs:annotation>
               <xs:documentation>The status of the storage policy. Supported values are: ENABLED, DISABLED</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="storagePolicy" type="storagePolicy"/>
   <xs:complexType name="storagePolicy">
      <xs:all>
         <xs:element name="id" type="xs:int">
            <xs:annotation>
               <xs:documentation>A system unique ID of this storage policy</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storagePolicyKey" type="storagePolicyKey">
            <xs:annotation>
               <xs:documentation>Wrapper for the storage policy unique identifiers</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storagePolicyRule" type="storagePolicyRule">
            <xs:annotation>
               <xs:documentation>Wrapper for the storage policy rule</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storagePolicyFilter" type="storagePolicyFilter">
            <xs:annotation>
               <xs:documentation>The storage policy filter to be used to select business object data</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storagePolicyTransition" type="storagePolicyTransition">
            <xs:annotation>
               <xs:documentation>The storage policy transition</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="status" type="xs:string">
            <xs:annotation>
               <xs:documentation>The status of the storage policy</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="storagePolicyKey">
      <xs:all>
         <xs:element name="namespace" type="xs:string">
            <xs:annotation>
               <xs:documentation>The namespace of the storage policy</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storagePolicyName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the storage policy</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="storagePolicyRule">
      <xs:all>
         <xs:element name="ruleType" type="xs:string">
            <xs:annotation>
               <xs:documentation>The storage policy rule type. Supported rule types are: DAYS_SINCE_BDATA_REGISTERED</xs:documentation>
            </xs:annotation>
         </xs:element>
         <!--
           This is required, but is left as optional here so the auto-generated object becomes "Integer" and not "int".
           That way, JSON objects that deserialize into the auto-generated object don't use the default int value of "0" and instead will leave
           the field as null. The validation that this field is required is handled via the service layer validation.
           -->
         <xs:element name="ruleValue" type="xs:int" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The storage policy rule value. This parameter is required</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="storagePolicyFilter">
      <xs:all>
         <xs:element name="namespace" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The namespace of the registered business object definition. It is required when businessObjectDefinitionName is present
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The name of the registered business object definition. It is required when namespace is present</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatUsage" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The business object format usage. The usage does not need to exist in the system. It is required when
                  businessObjectFormatFileType is present
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectFormatFileType" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The business object format file type. The file type must be known by the system. It is required when businessObjectFormatUsage
                  is present
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="storageName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the storage that this storage policy applies to. The storage with this name must already exist. Currently, only S3
                  storage platform type is supported by the storage policies
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="storagePolicyTransition">
      <xs:all>
         <xs:element name="destinationStorageName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of the destination storage. The storage with this name must already exist. Currently, only GLACIER storage platform
                  type is supported for the destination storage by the storage policies
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="businessObjectDataRetryStoragePolicyTransitionRequest" type="businessObjectDataRetryStoragePolicyTransitionRequest"/>
   <xs:complexType name="businessObjectDataRetryStoragePolicyTransitionRequest">
      <xs:all>
         <xs:element name="storagePolicyKey" type="storagePolicyKey">
            <xs:annotation>
               <xs:documentation>Wrapper for the storage policy unique identifiers</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** Namespace IAM Role Authorization ***** -->

   <xs:element name="namespaceIamRoleAuthorizations" type="namespaceIamRoleAuthorizations"/>
   <xs:complexType name="namespaceIamRoleAuthorizations">
      <xs:sequence>
         <xs:element name="namespaceIamRoleAuthorization" type="namespaceIamRoleAuthorization" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="namespaceIamRoleAuthorization" type="namespaceIamRoleAuthorization"/>
   <xs:complexType name="namespaceIamRoleAuthorization">
      <xs:sequence>
         <xs:element name="namespace" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The namespace</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="iamRoles" type="iamRoles" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The list of IAM roles the namespace is authorized to use</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="iamRoles">
      <xs:sequence>
         <xs:element name="iamRole" type="iamRole" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>An IAM role</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="iamRole">
      <xs:sequence>
         <xs:element name="iamRoleName" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The name of the IAM role</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="iamRoleDescription" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A description of the IAM role</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="namespaceIamRoleAuthorizationCreateRequest" type="namespaceIamRoleAuthorizationCreateRequest"/>
   <xs:complexType name="namespaceIamRoleAuthorizationCreateRequest">
      <xs:sequence>
         <xs:element name="namespace" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The namespace to give authorizations to</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="iamRoles" type="iamRoles" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The list of IAM roles to authorize</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="namespaceIamRoleAuthorizationUpdateRequest" type="namespaceIamRoleAuthorizationUpdateRequest"/>
   <xs:complexType name="namespaceIamRoleAuthorizationUpdateRequest">
      <xs:sequence>
         <xs:element name="iamRoles" type="iamRoles" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The list of IAM roles to authorize</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <!-- ***** Search Index ***** -->

   <xs:element name="searchIndexCreateRequest" type="searchIndexCreateRequest"/>
   <xs:complexType name="searchIndexCreateRequest">
      <xs:all>
         <xs:element name="searchIndexKey" type="searchIndexKey">
            <xs:annotation>
               <xs:documentation>A wrapper for the values that uniquely identify a Search Index</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="searchIndexType" type="xs:string">
            <xs:annotation>
               <xs:documentation>The type of this Search Index</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="searchIndex" type="searchIndex"/>
   <xs:complexType name="searchIndex">
      <xs:all>
         <xs:element name="searchIndexKey" type="searchIndexKey">
            <xs:annotation>
               <xs:documentation>A wrapper for the values that uniquely identify a Search Index</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="searchIndexType" type="xs:string">
            <xs:annotation>
               <xs:documentation>The type of this Search Index</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="searchIndexStatus" type="xs:string">
            <xs:annotation>
               <xs:documentation>The status of this Search Index. One of the following values: BUILDING, READY</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="searchIndexStatistics" type="searchIndexStatistics" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A wrapper for the search index information retrieved from the index</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="createdByUserId" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The User ID of the user who created this Search Index</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="createdOn" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The timestamp when this Search Index was created on</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="lastUpdatedOn" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The timestamp when this Search Index was last updated on</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:complexType name="searchIndexStatistics">
      <xs:all>
         <xs:element name="indexCreationDate" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The index creation date</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="indexNumberOfActiveDocuments" type="xs:long" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The number of active documents in this index</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="indexNumberOfDeletedDocuments" type="xs:long" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The number of deleted documents in this index</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="indexUuid" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>The UUID of the index</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="searchIndexKeys" type="searchIndexKeys">
      <xs:annotation>
         <xs:documentation>The list of Search Index keys</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="searchIndexKeys">
      <xs:sequence>
         <xs:element name="searchIndexKey" type="searchIndexKey" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A wrapper for the values that uniquely identify a Search Index</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType name="searchIndexKey">
      <xs:all>
         <xs:element name="searchIndexName" type="xs:string">
            <xs:annotation>
               <xs:documentation>The name of this Search Index</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <!-- ***** Search ***** -->

   <xs:element name="indexSearchRequest" type="indexSearchRequest">
      <xs:annotation>
         <xs:documentation>A wrapper for an index search request. The request will accept only a single search term
         </xs:documentation>
      </xs:annotation>
   </xs:element>

   <xs:complexType name="indexSearchRequest">
      <xs:all>
         <xs:element name="searchTerm" type="xs:string" minOccurs="1">
            <xs:annotation>
               <xs:documentation>The search term upon which to search</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="indexSearchResponse" type="indexSearchResponse"/>
   <xs:complexType name="indexSearchResponse">
      <xs:all>
         <xs:element name="totalIndexSearchResults" type="xs:long">
            <xs:annotation>
               <xs:documentation>The total number of index search results that matched the search term query</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="indexSearchResults" type="indexSearchResults" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  The top 200 index search results that matched the search term query
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="indexSearchResults" type="indexSearchResults"/>
   <xs:complexType name="indexSearchResults">
      <xs:sequence>
         <xs:element name="indexSearchResult" type="indexSearchResult" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Search hit document</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:element name="indexSearchResult" type="indexSearchResult"/>
   <xs:complexType name="indexSearchResult">
      <xs:all>
         <xs:element name="indexSearchResultType" type="xs:string">
            <xs:annotation>
               <xs:documentation>The type of the index search result</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="indexSearchResultKey" type="indexSearchResultKey">
            <xs:annotation>
               <xs:documentation>The index search result key container that holds the key for the search result type</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="displayName" type="xs:string" minOccurs="0" maxOccurs="1">
            <xs:annotation>
               <xs:documentation>
                  The display name of the tag or business object definition
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="shortDescription" type="xs:string" minOccurs="0" maxOccurs="1">
            <xs:annotation>
               <xs:documentation>
                  An optional short-description. This is actually the 'description' field truncated to a configurable number of characters
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

   <xs:element name="indexSearchResultKey" type="indexSearchResultKey"/>
   <xs:complexType name="indexSearchResultKey">
      <xs:all>
         <xs:element name="tagKey" type="tagKey" minOccurs="0" maxOccurs="1">
            <xs:annotation>
               <xs:documentation>The tag's unique key</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="businessObjectDefinitionKey" type="businessObjectDefinitionKey" minOccurs="0" maxOccurs="1">
            <xs:annotation>
               <xs:documentation>Values that uniquely identify a Business Object Definition</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:all>
   </xs:complexType>

</xs:schema>
